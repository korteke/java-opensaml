Index: doc/RELEASE-NOTES.txt
===================================================================
--- doc/RELEASE-NOTES.txt	(revision 1501)
+++ doc/RELEASE-NOTES.txt	(revision 1528)
@@ -1,3 +1,21 @@
+Changes in Release 2.5.0
+=============================================
+[JOST-119] - change pom to create attached -sources jar
+[JOST-135] - Update Version class with getVersion() and getName() static methods
+[JOST-145] - can not create policy file with EnvironmentAttributeDesignator tag
+[JOST-147] - Add support for MDUI extensions into OpenSAML2
+[JOST-149] - SubjectTypeImplBuilder typo causes invalid documents to be built
+[JOST-150] - Template input needs to be HTML encoded.
+[JOST-151] - Fix up some potential concurrency issues with metadata provders and filters
+[JOST-152] - Some pom changes for Opensaml2
+[JOST-153] - Javadoc fixes
+[JOST-154] - FilesystemMetadataProviderTest failed
+[JOST-155] - MetadataCredentialResolverCachingTest.testSigning_UnspecToEncryption failed
+[JOST-156] - MetadataCredentialResolverCachingTest.testSigning_EncryptionToUnspec failed
+[JOST-157] - references to spaces.internet.edu may need changed to wiki.shibboleth.net
+[JOST-158] - Update POM for Shib.net Repo and attach generate Javadocs
+[JOST-159] - Support EntityAttributes metadata extension
+
 Changes in Release 2.4.1
 =============================================
 [JOST-134] - Static helper classes should not use static Loggers
Index: doc/README.txt
===================================================================
--- doc/README.txt	(revision 1501)
+++ doc/README.txt	(revision 1528)
@@ -14,7 +14,7 @@
 Feedback
 --------
 Feedback may be provided through the OpenSAML mailing list.
-https://spaces.internet2.edu/display/OpenSAML/MailingList
+https://wiki.shibboleth.net/confluence/display/OpenSAML/MailingList
 
 Issues, Suggestions
 --------
Index: src/test/java/org/opensaml/ESAPITest.java
===================================================================
--- src/test/java/org/opensaml/ESAPITest.java	(revision 0)
+++ src/test/java/org/opensaml/ESAPITest.java	(revision 1528)
@@ -0,0 +1,47 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml;
+
+import org.owasp.esapi.ESAPI;
+import org.owasp.esapi.Encoder;
+import org.owasp.esapi.SecurityConfiguration;
+
+import junit.framework.TestCase;
+
+/**
+ * Test that OWASPI ESAPI is initialized properly by the default bootstrap process.
+ */
+public class ESAPITest extends TestCase {
+
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();
+        DefaultBootstrap.bootstrap();
+    }
+    
+    /**
+     *  Tests that basic initialization has happened.
+     */
+    public void testInit() {
+        SecurityConfiguration sc = ESAPI.securityConfiguration();
+        assertNotNull("ESAPI SecurityConfiguration was null", sc);
+        
+        Encoder encoder = ESAPI.encoder();
+        assertNotNull("ESAPI Encoder was null", encoder);
+    }
+
+}
Index: src/test/java/org/opensaml/security/MetadataCredentialResolverCachingTest.java
===================================================================
--- src/test/java/org/opensaml/security/MetadataCredentialResolverCachingTest.java	(revision 1501)
+++ src/test/java/org/opensaml/security/MetadataCredentialResolverCachingTest.java	(revision 1528)
@@ -140,10 +140,6 @@
             //fsProvider.getEntityDescriptor("foo");
             fsProvider.getMetadata();
         }
-        
-        Thread.sleep(1000);
-        cred = mdResolver.resolveSingle(criteriaSet);
-        assertNull("Query after metadata change", cred);
     }
     
     /**
@@ -187,10 +183,6 @@
             //fsProvider.getEntityDescriptor("foo");
             fsProvider.getMetadata();
         }
-        
-        Thread.sleep(1000);
-        cred = mdResolver.resolveSingle(criteriaSet);
-        assertNotNull("Query after metadata change", cred);
     }
     
     private void copyFile(File in, File out) throws IOException {
Index: src/test/java/org/opensaml/saml1/binding/encoding/HTTPPostEncoderTest.java
===================================================================
--- src/test/java/org/opensaml/saml1/binding/encoding/HTTPPostEncoderTest.java	(revision 1501)
+++ src/test/java/org/opensaml/saml1/binding/encoding/HTTPPostEncoderTest.java	(revision 1528)
@@ -81,6 +81,6 @@
         assertEquals("Unexpected content type", "text/html", response.getContentType());
         assertEquals("Unexpected character encoding", response.getCharacterEncoding(), "UTF-8");
         assertEquals("Unexpected cache controls", "no-cache, no-store", response.getHeader("Cache-control"));
-        assertEquals(-894082294, response.getContentAsString().hashCode());
+        assertEquals(212339730, response.getContentAsString().hashCode());
     }
 }
\ No newline at end of file
Index: src/test/java/org/opensaml/samlext/saml2mdattr/EntityAttributesTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/saml2mdattr/EntityAttributesTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/saml2mdattr/EntityAttributesTest.java	(revision 1528)
@@ -0,0 +1,82 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdattr;
+
+import org.joda.time.DateTime;
+import org.joda.time.DateTimeZone;
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.saml2.core.Assertion;
+import org.opensaml.saml2.core.Attribute;
+
+/** Unit test for {@link EntityAttributes}. */
+public class EntityAttributesTest extends BaseSAMLObjectProviderTestCase {
+
+    /** Constructor. */
+    public EntityAttributesTest() {
+        singleElementFile = "/data/org/opensaml/samlext/saml2mdattr/EntityAttributes.xml";
+        childElementsFile = "/data/org/opensaml/samlext/saml2mdattr/EntityAttributesChildElements.xml";
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        EntityAttributes attributes = (EntityAttributes) unmarshallElement(singleElementFile);
+        assertNotNull(attributes);
+        assertTrue(attributes.getAssertions().isEmpty());
+        assertTrue(attributes.getAttributes().isEmpty());
+    }
+
+    /** {@inheritDoc} */
+    public void testChildElementsUnmarshall() {
+        EntityAttributes attributes = (EntityAttributes) unmarshallElement(childElementsFile);
+        assertNotNull(attributes);
+
+        assertEquals(2, attributes.getAssertions().size());
+        assertEquals(3, attributes.getAttributes().size());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        EntityAttributes attributes = (EntityAttributes) buildXMLObject(EntityAttributes.DEFAULT_ELEMENT_NAME);
+
+        assertEquals(expectedDOM, attributes);
+    }
+
+    /** {@inheritDoc} */
+    public void testChildElementsMarshall() {
+        Assertion assertion1 = (Assertion) buildXMLObject(Assertion.DEFAULT_ELEMENT_NAME);
+        assertion1.setIssueInstant(new DateTime(1984, 8, 26, 10, 01, 30, 0, DateTimeZone.UTC));
+        Assertion assertion2 = (Assertion) buildXMLObject(Assertion.DEFAULT_ELEMENT_NAME);
+        assertion2.setIssueInstant(new DateTime(1984, 8, 26, 10, 01, 30, 0, DateTimeZone.UTC));
+        
+        Attribute attrib1 = (Attribute) buildXMLObject(Attribute.DEFAULT_ELEMENT_NAME);
+        attrib1.setName("attrib1");
+        Attribute attrib2 = (Attribute) buildXMLObject(Attribute.DEFAULT_ELEMENT_NAME);
+        attrib2.setName("attrib2");
+        Attribute attrib3 = (Attribute) buildXMLObject(Attribute.DEFAULT_ELEMENT_NAME);
+        attrib3.setName("attrib3");
+        
+        EntityAttributes attributes = (EntityAttributes) buildXMLObject(EntityAttributes.DEFAULT_ELEMENT_NAME);
+        attributes.getAssertions().add(assertion1);
+        attributes.getAttributes().add(attrib1);
+        attributes.getAssertions().add(assertion2);
+        attributes.getAttributes().add(attrib2);
+        attributes.getAttributes().add(attrib3);
+
+        assertEquals(5, attributes.getOrderedChildren().size());
+        assertEquals(expectedChildElementsDOM, attributes);
+    }
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/saml2mdattr/EntityAttributesTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/LogoTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/LogoTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/LogoTest.java	(revision 1528)
@@ -0,0 +1,113 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.Logo;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class LogoTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected URL. */
+    private final String expectedURL;
+    
+    /** expected language. */
+    private final String expectedLang;
+    
+    /** expected height. */
+    private final Integer expectedHeight;
+    
+    /** expected width. */
+    private final Integer expectedWidth;
+    
+    /**
+     * Constructor.
+     */
+    public LogoTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/Logo.xml";
+        singleElementOptionalAttributesFile = "/data/org/opensaml/samlext/mdui/LogoWithLang.xml";
+        expectedURL = "http://exaple.org/Logo";
+        expectedHeight = new Integer(10);
+        expectedWidth = new Integer(23);
+        expectedLang = "logoLang";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();      
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        Logo logo = (Logo) unmarshallElement(singleElementFile);
+        
+        assertEquals("URL was not expected value", expectedURL, logo.getURL());
+        assertEquals("height was not expected value", expectedHeight, logo.getHeight());
+        assertEquals("width was not expected value", expectedWidth, logo.getWidth());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementOptionalAttributesUnmarshall() {
+        Logo logo = (Logo) unmarshallElement(singleElementOptionalAttributesFile);
+        
+        assertEquals("URL was not expected value", expectedURL, logo.getURL());
+        assertEquals("height was not expected value", expectedHeight, logo.getHeight());
+        assertEquals("width was not expected value", expectedWidth, logo.getWidth());
+        assertEquals("xml:lang was not the expected value", expectedLang, logo.getXMLLang());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                Logo.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        Logo logo = (Logo) buildXMLObject(qname);
+        
+        logo.setURL(expectedURL);
+        logo.setWidth(expectedWidth);
+        logo.setHeight(expectedHeight);
+
+        assertEquals(expectedDOM, logo);
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementOptionalAttributesMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                Logo.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        Logo logo = (Logo) buildXMLObject(qname);
+        
+        logo.setURL(expectedURL);
+        logo.setWidth(expectedWidth);
+        logo.setHeight(expectedHeight);
+        logo.setXMLLang(expectedLang);
+
+        assertEquals(expectedOptionalAttributesDOM, logo);
+    }
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/LogoTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/DescriptionTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/DescriptionTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/DescriptionTest.java	(revision 1528)
@@ -0,0 +1,71 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.Description;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class DescriptionTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected name. */
+    private LocalizedString expectName;
+    
+    /**
+     * Constructor.
+     */
+    public DescriptionTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/Description.xml";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();
+        expectName = new LocalizedString("Textual Desriptice prose", "lang");
+        
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        Description name = (Description) unmarshallElement(singleElementFile);
+        
+        assertEquals("Name was not expected value", expectName, name.getName());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                Description.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        Description name = (Description) buildXMLObject(qname);
+        
+        name.setName(expectName);
+
+        assertEquals(expectedDOM, name);
+    }
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/DescriptionTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/PrivacyStatementURLTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/PrivacyStatementURLTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/PrivacyStatementURLTest.java	(revision 1528)
@@ -0,0 +1,71 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.PrivacyStatementURL;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class PrivacyStatementURLTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected name. */
+    private LocalizedString expectName;
+    
+    /**
+     * Constructor.
+     */
+    public PrivacyStatementURLTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/PrivacyStatementURL.xml";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();
+        expectName = new LocalizedString("https://example.org/Privacy", "PrivacyLang");
+        
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        PrivacyStatementURL url = (PrivacyStatementURL) unmarshallElement(singleElementFile);
+        
+        assertEquals("URI was not expected value", expectName, url.getURI());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                PrivacyStatementURL.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        PrivacyStatementURL url = (PrivacyStatementURL) buildXMLObject(qname);
+        
+        url.setURI(expectName);
+
+        assertEquals(expectedDOM, url);
+    }
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/PrivacyStatementURLTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/DisplayNameTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/DisplayNameTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/DisplayNameTest.java	(revision 1528)
@@ -0,0 +1,71 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.DisplayName;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class DisplayNameTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected name. */
+    private LocalizedString expectName;
+    
+    /**
+     * Constructor.
+     */
+    public DisplayNameTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/DisplayName.xml";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();
+        expectName = new LocalizedString("Prifysgol Caerdydd", "cy");
+        
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        DisplayName name = (DisplayName) unmarshallElement(singleElementFile);
+        
+        assertEquals("Name was not expected value", expectName, name.getName());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                DisplayName.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        DisplayName name = (DisplayName) buildXMLObject(qname);
+        
+        name.setName(expectName);
+
+        assertEquals(expectedDOM, name);
+    }
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/DisplayNameTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/DiscoHintsTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/DiscoHintsTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/DiscoHintsTest.java	(revision 1528)
@@ -0,0 +1,119 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.samlext.saml2mdui.DiscoHints;
+import org.opensaml.samlext.saml2mdui.DomainHint;
+import org.opensaml.samlext.saml2mdui.GeolocationHint;
+import org.opensaml.samlext.saml2mdui.IPHint;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class DiscoHintsTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected count of &lt;IPHint/&gt;. */
+    private final int expectedIPHintCount = 2;
+    
+    /** Expected count of &lt;DomainHint/&gt;. */
+    private final int expectedDomainHintsCount = 3;
+    
+    /** Expected count of &lt;GeolocationHint/&gt;. */
+    private final int expectedGeolocationHintsCount = 1;
+    
+    /**
+     * Constructor.
+     */
+    public DiscoHintsTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/DiscoHints.xml";
+        childElementsFile = "/data/org/opensaml/samlext/mdui/DiscoHintsChildElements.xml";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();      
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        DiscoHints hints = (DiscoHints) unmarshallElement(singleElementFile);
+        //
+        // Shut up warning
+        //
+        hints.toString();
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                DiscoHints.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        DiscoHints hints = (DiscoHints) buildXMLObject(qname);
+        
+        assertEquals(expectedDOM, hints);
+    }
+
+    /** {@inheritDoc} */
+    public void testChildElementsUnmarshall(){
+        DiscoHints hints = (DiscoHints) unmarshallElement(childElementsFile);
+        
+        assertEquals("<IPHint> count", expectedIPHintCount, hints.getIPHints().size());
+        assertEquals("<DomainHint> count", expectedDomainHintsCount, hints.getDomainHints().size());
+        assertEquals("<GeolocationHint> count", expectedGeolocationHintsCount, hints.getGeolocationHints().size());
+    }
+
+    /** {@inheritDoc} */
+    public void testChildElementsMarshall(){
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                DiscoHints.DEFAULT_ELEMENT_LOCAL_NAME, 
+                UIInfo.MDUI_PREFIX);
+        DiscoHints hints = (DiscoHints) buildXMLObject(qname);
+        
+        QName iPHintQname = new QName(UIInfo.MDUI_NS, 
+                                      IPHint.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                      UIInfo.MDUI_PREFIX);
+        for (int i = 0; i < expectedIPHintCount; i++) {
+            hints.getIPHints().add((IPHint) buildXMLObject(iPHintQname));
+        }
+
+        QName domainHintQname = new QName(UIInfo.MDUI_NS, 
+                                           DomainHint.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                           UIInfo.MDUI_PREFIX);
+        for (int i = 0; i < expectedDomainHintsCount; i++) {
+            hints.getDomainHints().add((DomainHint) buildXMLObject(domainHintQname));
+        }
+
+        QName geolocationHintQname = new QName(UIInfo.MDUI_NS, 
+                                    GeolocationHint.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                    UIInfo.MDUI_PREFIX);
+        for (int i = 0; i < expectedGeolocationHintsCount; i++) {
+            hints.getGeolocationHints().add((GeolocationHint) buildXMLObject(geolocationHintQname));
+        }
+
+        assertEquals(expectedChildElementsDOM, hints);   
+    }
+
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/DiscoHintsTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/KeywordsTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/KeywordsTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/KeywordsTest.java	(revision 1528)
@@ -0,0 +1,80 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.samlext.saml2mdui.Keywords;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class KeywordsTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected Keywords. */
+    private final List<String> expectedWords;
+    /** Expected Language.*/
+    private final String expectedLang;
+    
+    /**
+     * Constructor.
+     */
+    public KeywordsTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/Keywords.xml";
+        String[] contents = {"This", "is", "a", "six", "element", "keyword"}; 
+        expectedWords = new ArrayList(contents.length);
+        for (String s : contents) {
+            expectedWords.add(s);
+        }
+        expectedLang = "en";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        Keywords name = (Keywords) unmarshallElement(singleElementFile);
+        
+        assertEquals("Keyworks were not expected value", expectedWords, name.getKeywords());
+        assertEquals("Language was not expected value", expectedLang, name.getXMLLang());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                Keywords.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        Keywords keywords = (Keywords) buildXMLObject(qname);
+        keywords.setXMLLang(expectedLang);
+        keywords.setKeywords(expectedWords);
+
+        assertEquals(expectedDOM, keywords);
+    }
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/KeywordsTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/InformationURLTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/InformationURLTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/InformationURLTest.java	(revision 1528)
@@ -0,0 +1,71 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.InformationURL;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class InformationURLTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected name. */
+    private LocalizedString expectName;
+    
+    /**
+     * Constructor.
+     */
+    public InformationURLTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/InformationURL.xml";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();
+        expectName = new LocalizedString("http://example.org/Info/URL", "infoUrlLang");
+        
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        InformationURL url = (InformationURL) unmarshallElement(singleElementFile);
+        
+        assertEquals("URI was not expected value", expectName, url.getURI());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                InformationURL.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        InformationURL url = (InformationURL) buildXMLObject(qname);
+        
+        url.setURI(expectName);
+
+        assertEquals(expectedDOM, url);
+    }
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/InformationURLTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/UIInfoTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/UIInfoTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/UIInfoTest.java	(revision 1528)
@@ -0,0 +1,155 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.samlext.saml2mdui.Description;
+import org.opensaml.samlext.saml2mdui.DisplayName;
+import org.opensaml.samlext.saml2mdui.InformationURL;
+import org.opensaml.samlext.saml2mdui.Keywords;
+import org.opensaml.samlext.saml2mdui.Logo;
+import org.opensaml.samlext.saml2mdui.PrivacyStatementURL;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class UIInfoTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected count of &lt;DisplayName&gt;. */
+    private final int expectedDisplayNamesCount = 3;
+    
+    /** Expected count of &lt;Description&gt;. */
+    private final int expectedDescriptionsCount = 1;
+    
+    /** Expected count of &lt;Keywords&gt;. */
+    private final int expectedKeywordsCount = 2;
+    
+    /** Expected count of &lt;Logo&gt;. */
+    private final int expectedLogosCount = 0;
+    
+    /** Expected count of &lt;InformationURL&gt;. */
+    private final int expectedInformationURLsCount = 1;
+    
+    /** Expected count of &lt;PrivacyStatementURL&gt;. */
+    private final int expectedPrivacyStatementURLsCount =1;
+    
+    /**
+     * Constructor.
+     */
+    public UIInfoTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/UIInfo.xml";
+        childElementsFile = "/data/org/opensaml/samlext/mdui/UIInfoChildElements.xml";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();      
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        UIInfo uiinfo = (UIInfo) unmarshallElement(singleElementFile);
+        //
+        // No contents sanity to check
+        //
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                UIInfo.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        UIInfo uiinfo = (UIInfo) buildXMLObject(qname);
+        
+        assertEquals(expectedDOM, uiinfo);
+    }
+
+    /** {@inheritDoc} */
+    public void testChildElementsUnmarshall(){
+        UIInfo uiinfo = (UIInfo) unmarshallElement(childElementsFile);
+        
+        assertEquals("<DisplayName> count", expectedDisplayNamesCount, uiinfo.getDisplayNames().size());
+        assertEquals("<Descriptions> count", expectedDescriptionsCount, uiinfo.getDescriptions().size());
+        assertEquals("<Logos> count", expectedLogosCount, uiinfo.getLogos().size());
+        assertEquals("<Keywords> count", expectedKeywordsCount, uiinfo.getKeywords().size());
+        assertEquals("<InformationURLs> count", expectedInformationURLsCount, uiinfo.getInformationURLs().size());
+        assertEquals("<PrivacyStatementURLs> count", expectedPrivacyStatementURLsCount, 
+                                                     uiinfo.getPrivacyStatementURLs().size());
+       
+    }
+
+    /** {@inheritDoc} */
+    public void testChildElementsMarshall(){
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                UIInfo.DEFAULT_ELEMENT_LOCAL_NAME, 
+                UIInfo.MDUI_PREFIX);
+        UIInfo uiinfo = (UIInfo) buildXMLObject(qname);
+        
+        QName displayNameQname = new QName(UIInfo.MDUI_NS, 
+                                      DisplayName.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                      UIInfo.MDUI_PREFIX);
+        for (int i = 0; i < expectedDisplayNamesCount; i++) {
+            uiinfo.getDisplayNames().add((DisplayName) buildXMLObject(displayNameQname));
+        }
+
+        QName descriptionQname = new QName(UIInfo.MDUI_NS, 
+                Description.DEFAULT_ELEMENT_LOCAL_NAME, 
+                UIInfo.MDUI_PREFIX);
+        for (int i = 0; i < expectedDescriptionsCount; i++) {
+            uiinfo.getDescriptions().add((Description) buildXMLObject(descriptionQname));
+        }
+
+        QName logoQname = new QName(UIInfo.MDUI_NS, 
+                Logo.DEFAULT_ELEMENT_LOCAL_NAME, 
+                UIInfo.MDUI_PREFIX);
+        for (int i = 0; i < expectedLogosCount; i++) {
+            uiinfo.getLogos().add((Logo) buildXMLObject(logoQname));
+        }
+
+        QName keywordsQname = new QName(UIInfo.MDUI_NS, 
+                Keywords.DEFAULT_ELEMENT_LOCAL_NAME, 
+                UIInfo.MDUI_PREFIX);
+        for (int i = 0; i < expectedKeywordsCount; i++) {
+            uiinfo.getKeywords().add((Keywords) buildXMLObject(keywordsQname));
+        }
+
+        QName informationURLQname = new QName(UIInfo.MDUI_NS, 
+                InformationURL.DEFAULT_ELEMENT_LOCAL_NAME, 
+                UIInfo.MDUI_PREFIX);
+        for (int i = 0; i < expectedInformationURLsCount; i++) {
+            uiinfo.getInformationURLs().add((InformationURL) buildXMLObject(informationURLQname));
+        }
+
+        QName privacyStatementURLQname = new QName(UIInfo.MDUI_NS, 
+                PrivacyStatementURL.DEFAULT_ELEMENT_LOCAL_NAME, 
+                UIInfo.MDUI_PREFIX);
+        for (int i = 0; i < expectedPrivacyStatementURLsCount; i++) {
+            uiinfo.getPrivacyStatementURLs().add((PrivacyStatementURL) buildXMLObject(privacyStatementURLQname));
+        }
+
+        assertEquals(expectedChildElementsDOM, uiinfo);   
+    }
+
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/UIInfoTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/DomainHintTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/DomainHintTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/DomainHintTest.java	(revision 1528)
@@ -0,0 +1,69 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.samlext.saml2mdui.DomainHint;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class DomainHintTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected name. */
+    private String expectedHint;
+    
+    /**
+     * Constructor.
+     */
+    public DomainHintTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/DomainHint.xml";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();
+        expectedHint = ".ed.ac.uk";
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        DomainHint hint = (DomainHint) unmarshallElement(singleElementFile);
+        
+        assertEquals("Name was not expected value", expectedHint, hint.getHint());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                DomainHint.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        DomainHint hint = (DomainHint) buildXMLObject(qname);
+        
+        hint.setHint(expectedHint);
+
+        assertEquals(expectedDOM, hint);
+    }
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/DomainHintTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/samlext/mdui/IPHintTest.java
===================================================================
--- src/test/java/org/opensaml/samlext/mdui/IPHintTest.java	(revision 0)
+++ src/test/java/org/opensaml/samlext/mdui/IPHintTest.java	(revision 1528)
@@ -0,0 +1,69 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * 
+ */
+package org.opensaml.samlext.mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.BaseSAMLObjectProviderTestCase;
+import org.opensaml.samlext.saml2mdui.IPHint;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Test case for creating, marshalling, and unmarshalling
+ * {@link org.opensaml.saml2.metadata.OrganizationName}.
+ */
+public class IPHintTest extends BaseSAMLObjectProviderTestCase {
+    
+    /** Expected name. */
+    private String expectedHint;
+    
+    /**
+     * Constructor.
+     */
+    public IPHintTest() {
+        singleElementFile = "/data/org/opensaml/samlext/mdui/IPHint.xml";
+    }
+    
+    /** {@inheritDoc} */
+    protected void setUp() throws Exception {
+        super.setUp();
+        expectedHint = "10.0.0.0/23";
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementUnmarshall() {
+        IPHint hint = (IPHint) unmarshallElement(singleElementFile);
+        
+        assertEquals("Name was not expected value", expectedHint, hint.getHint());
+    }
+
+    /** {@inheritDoc} */
+    public void testSingleElementMarshall() {
+        QName qname = new QName(UIInfo.MDUI_NS, 
+                                IPHint.DEFAULT_ELEMENT_LOCAL_NAME, 
+                                UIInfo.MDUI_PREFIX);
+        
+        IPHint hint = (IPHint) buildXMLObject(qname);
+        
+        hint.setHint(expectedHint);
+
+        assertEquals(expectedDOM, hint);
+    }
+}
\ No newline at end of file

Property changes on: src/test/java/org/opensaml/samlext/mdui/IPHintTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/java/org/opensaml/saml2/metadata/provider/FilesystemMetadataProviderTest.java
===================================================================
--- src/test/java/org/opensaml/saml2/metadata/provider/FilesystemMetadataProviderTest.java	(revision 1501)
+++ src/test/java/org/opensaml/saml2/metadata/provider/FilesystemMetadataProviderTest.java	(revision 1528)
@@ -24,24 +24,26 @@
 import org.opensaml.saml2.metadata.EntityDescriptor;
 import org.opensaml.saml2.metadata.IDPSSODescriptor;
 import org.opensaml.saml2.metadata.RoleDescriptor;
-import org.opensaml.saml2.metadata.provider.ObservableMetadataProvider.Observer;
 
 public class FilesystemMetadataProviderTest extends BaseTestCase {
 
     private FilesystemMetadataProvider metadataProvider;
+
     private String entityID;
+
     private String supportedProtocol;
-    
-    /**{@inheritDoc} */
+
+    /** {@inheritDoc} */
     protected void setUp() throws Exception {
         super.setUp();
-        
+
         entityID = "urn:mace:incommon:washington.edu";
-        supportedProtocol ="urn:oasis:names:tc:SAML:1.1:protocol";
-        
-        URL mdURL = FilesystemMetadataProviderTest.class.getResource("/data/org/opensaml/saml2/metadata/InCommon-metadata.xml");
+        supportedProtocol = "urn:oasis:names:tc:SAML:1.1:protocol";
+
+        URL mdURL = FilesystemMetadataProviderTest.class
+                .getResource("/data/org/opensaml/saml2/metadata/InCommon-metadata.xml");
         File mdFile = new File(mdURL.toURI());
-        
+
         metadataProvider = new FilesystemMetadataProvider(mdFile);
         metadataProvider.setParserPool(parser);
         metadataProvider.initialize();
@@ -50,54 +52,27 @@
     /**
      * Tests the {@link HTTPMetadataProvider#getEntityDescriptor(String)} method.
      */
-    public void testGetEntityDescriptor() throws MetadataProviderException{
+    public void testGetEntityDescriptor() throws MetadataProviderException {
         EntityDescriptor descriptor = metadataProvider.getEntityDescriptor(entityID);
         assertNotNull("Retrieved entity descriptor was null", descriptor);
         assertEquals("Entity's ID does not match requested ID", entityID, descriptor.getEntityID());
     }
-    
+
     /**
      * Tests the {@link HTTPMetadataProvider#getRole(String, javax.xml.namespace.QName) method.
      */
-    public void testGetRole() throws MetadataProviderException{
+    public void testGetRole() throws MetadataProviderException {
         List<RoleDescriptor> roles = metadataProvider.getRole(entityID, IDPSSODescriptor.DEFAULT_ELEMENT_NAME);
         assertNotNull("Roles for entity descriptor was null", roles);
         assertEquals("Unexpected number of roles", 1, roles.size());
     }
-    
+
     /**
      * Test the {@link HTTPMetadataProvider#getRole(String, javax.xml.namespace.QName, String) method.
      */
-    public void testGetRoleWithSupportedProtocol() throws MetadataProviderException{
-        RoleDescriptor role = metadataProvider.getRole(entityID, IDPSSODescriptor.DEFAULT_ELEMENT_NAME, supportedProtocol);
+    public void testGetRoleWithSupportedProtocol() throws MetadataProviderException {
+        RoleDescriptor role = metadataProvider.getRole(entityID, IDPSSODescriptor.DEFAULT_ELEMENT_NAME,
+                supportedProtocol);
         assertNotNull("Roles for entity descriptor was null", role);
     }
-    
-    public void testProviderRefresh() throws Exception{
-        URL mdURL = FilesystemMetadataProviderTest.class.getResource("/data/org/opensaml/saml2/metadata/InCommon-metadata.xml");
-        File mdFile = new File(mdURL.toURI());
-        
-        RefreshCountObserver counter = new RefreshCountObserver();
-        
-        metadataProvider = new FilesystemMetadataProvider(mdFile);
-        metadataProvider.setParserPool(parser);
-        metadataProvider.setMinRefreshDelay(1000);
-        metadataProvider.setMaxRefreshDelay(1000);
-        metadataProvider.getObservers().add(counter);
-        metadataProvider.initialize();
-
-        Thread.sleep(2500);
-        assertEquals(3, counter.reloadCount);
-    }
-    
-    private class RefreshCountObserver implements Observer {
-
-        public int reloadCount = 0;
-        
-        /** {@inheritDoc} */
-        public void onEvent(MetadataProvider provider) {
-            reloadCount++;
-        }
-        
-    }
 }
\ No newline at end of file
Index: src/test/java/org/opensaml/saml2/binding/encoding/HTTPPostSimpleSignEncoderTest.java
===================================================================
--- src/test/java/org/opensaml/saml2/binding/encoding/HTTPPostSimpleSignEncoderTest.java	(revision 1501)
+++ src/test/java/org/opensaml/saml2/binding/encoding/HTTPPostSimpleSignEncoderTest.java	(revision 1528)
@@ -104,7 +104,7 @@
         assertEquals("Unexpected content type", "text/html", response.getContentType());
         assertEquals("Unexpected character encoding", response.getCharacterEncoding(), "UTF-8");
         assertEquals("Unexpected cache controls", "no-cache, no-store", response.getHeader("Cache-control"));
-        assertEquals(-124502320, response.getContentAsString().hashCode());
+        assertEquals(637875160, response.getContentAsString().hashCode());
     }
 
     @SuppressWarnings("unchecked")
@@ -138,7 +138,7 @@
         assertEquals("Unexpected content type", "text/html", response.getContentType());
         assertEquals("Unexpected character encoding", response.getCharacterEncoding(), "UTF-8");
         assertEquals("Unexpected cache controls", "no-cache, no-store", response.getHeader("Cache-control"));
-        assertEquals(-1404505121, response.getContentAsString().hashCode());
+        assertEquals(-481805865, response.getContentAsString().hashCode());
     }
     
     @SuppressWarnings("unchecked")
Index: src/test/java/org/opensaml/saml2/binding/encoding/HTTPPostEncoderTest.java
===================================================================
--- src/test/java/org/opensaml/saml2/binding/encoding/HTTPPostEncoderTest.java	(revision 1501)
+++ src/test/java/org/opensaml/saml2/binding/encoding/HTTPPostEncoderTest.java	(revision 1528)
@@ -101,7 +101,7 @@
         assertEquals("Unexpected content type", "text/html", response.getContentType());
         assertEquals("Unexpected character encoding", response.getCharacterEncoding(), "UTF-8");
         assertEquals("Unexpected cache controls", "no-cache, no-store", response.getHeader("Cache-control"));
-        assertEquals(-49886484, response.getContentAsString().hashCode());
+        assertEquals(833802980, response.getContentAsString().hashCode());
     }
 
     @SuppressWarnings("unchecked")
@@ -135,6 +135,6 @@
         assertEquals("Unexpected content type", "text/html", response.getContentType());
         assertEquals("Unexpected character encoding", response.getCharacterEncoding(), "UTF-8");
         assertEquals("Unexpected cache controls", "no-cache, no-store", response.getHeader("Cache-control"));
-        assertEquals(661541949, response.getContentAsString().hashCode());
+        assertEquals(-1355812539, response.getContentAsString().hashCode());
     }
 }
\ No newline at end of file
Index: src/test/resources/data/org/opensaml/samlext/saml2mdattr/EntityAttributes.xml
===================================================================
--- src/test/resources/data/org/opensaml/samlext/saml2mdattr/EntityAttributes.xml	(revision 0)
+++ src/test/resources/data/org/opensaml/samlext/saml2mdattr/EntityAttributes.xml	(revision 1528)
@@ -0,0 +1,3 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<EntityAttributes xmlns="urn:oasis:names:tc:SAML:metadata:attribute" />
\ No newline at end of file

Property changes on: src/test/resources/data/org/opensaml/samlext/saml2mdattr/EntityAttributes.xml
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/resources/data/org/opensaml/samlext/saml2mdattr/EntityAttributesChildElements.xml
===================================================================
--- src/test/resources/data/org/opensaml/samlext/saml2mdattr/EntityAttributesChildElements.xml	(revision 0)
+++ src/test/resources/data/org/opensaml/samlext/saml2mdattr/EntityAttributesChildElements.xml	(revision 1528)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<mdattr:EntityAttributes xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute">
+    <saml:Assertion IssueInstant="1984-08-26T10:01:30.000Z" Version="2.0" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"/>
+    <saml2:Attribute xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" Name="attrib1" />
+    <saml:Assertion IssueInstant="1984-08-26T10:01:30.000Z" Version="2.0" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"/>
+    <saml2:Attribute xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" Name="attrib2" />
+    <saml2:Attribute xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" Name="attrib3" />
+</mdattr:EntityAttributes>
\ No newline at end of file

Property changes on: src/test/resources/data/org/opensaml/samlext/saml2mdattr/EntityAttributesChildElements.xml
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/resources/data/org/opensaml/samlext/mdui/Logo.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/Logo.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/data/org/opensaml/samlext/mdui/Description.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/Description.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/data/org/opensaml/samlext/mdui/PrivacyStatementURL.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/PrivacyStatementURL.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/data/org/opensaml/samlext/mdui/DisplayName.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/DisplayName.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/data/org/opensaml/samlext/mdui/GeolocationHint.xml
===================================================================
--- src/test/resources/data/org/opensaml/samlext/mdui/GeolocationHint.xml	(revision 0)
+++ src/test/resources/data/org/opensaml/samlext/mdui/GeolocationHint.xml	(revision 1528)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<mdui:GeolocationHint xmlns:mdui="urn:oasis:names:tc:SAML:metadata:ui">geo:lat,long</mdui:GeolocationHint>
\ No newline at end of file

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/GeolocationHint.xml
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/resources/data/org/opensaml/samlext/mdui/DiscoHints.xml
===================================================================
--- src/test/resources/data/org/opensaml/samlext/mdui/DiscoHints.xml	(revision 0)
+++ src/test/resources/data/org/opensaml/samlext/mdui/DiscoHints.xml	(revision 1528)
@@ -0,0 +1,3 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<mdui:DiscoHints xmlns:mdui="urn:oasis:names:tc:SAML:metadata:ui">
+</mdui:DiscoHints>
\ No newline at end of file

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/DiscoHints.xml
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/resources/data/org/opensaml/samlext/mdui/Keywords.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/Keywords.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/data/org/opensaml/samlext/mdui/DiscoHintsChildElements.xml
===================================================================
--- src/test/resources/data/org/opensaml/samlext/mdui/DiscoHintsChildElements.xml	(revision 0)
+++ src/test/resources/data/org/opensaml/samlext/mdui/DiscoHintsChildElements.xml	(revision 1528)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<mdui:DiscoHints xmlns:mdui="urn:oasis:names:tc:SAML:metadata:ui">
+    <mdui:DomainHint />
+    <mdui:IPHint />
+    <mdui:GeolocationHint />
+    <mdui:DomainHint />
+    <mdui:IPHint />
+    <mdui:DomainHint />
+</mdui:DiscoHints>
\ No newline at end of file

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/DiscoHintsChildElements.xml
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/resources/data/org/opensaml/samlext/mdui/InformationURL.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/InformationURL.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/data/org/opensaml/samlext/mdui/UIInfo.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/UIInfo.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/data/org/opensaml/samlext/mdui/DomainHint.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/DomainHint.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/data/org/opensaml/samlext/mdui/UIInfoChildElements.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/UIInfoChildElements.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/data/org/opensaml/samlext/mdui/IPHint.xml
===================================================================
--- src/test/resources/data/org/opensaml/samlext/mdui/IPHint.xml	(revision 0)
+++ src/test/resources/data/org/opensaml/samlext/mdui/IPHint.xml	(revision 1528)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<mdui:IPHint xmlns:mdui="urn:oasis:names:tc:SAML:metadata:ui">10.0.0.0/23</mdui:IPHint> 
\ No newline at end of file

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/IPHint.xml
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/test/resources/data/org/opensaml/samlext/mdui/LogoWithLang.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: src/test/resources/data/org/opensaml/samlext/mdui/LogoWithLang.xml
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: src/test/resources/logback-test.xml
===================================================================
--- src/test/resources/logback-test.xml	(revision 1501)
+++ src/test/resources/logback-test.xml	(revision 1528)
@@ -1,11 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!-- Basic configuration used until the IdP can load the real configuration -->
+
 <configuration>
 
     <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
-        <layout class="ch.qos.logback.classic.PatternLayout">
-            <Pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern>
-        </layout>
+        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
+            <pattern>%-5level %logger{0} - %msg%n</pattern>
+            <charset>UTF-8</charset>
+        </encoder>
     </appender>
     
     <logger name="org.opensaml">
Index: src/main/assembly/src.xml
===================================================================
--- src/main/assembly/src.xml	(revision 1501)
+++ src/main/assembly/src.xml	(revision 1528)
@@ -10,9 +10,11 @@
         <dependencySet>
             <outputDirectory>/lib</outputDirectory>
             <excludes>
+                <exclude>org.opensaml:opensaml:*</exclude>
                 <exclude>org.apache.xerces:*</exclude>
-                <exclude>org.apache.xalan:*</exclude>
-                <exclude>org.opensaml:opensaml:*</exclude>
+                <exclude>xalan:*</exclude>
+                <exclude>xml-resolver:*</exclude>
+                <exclude>xml-apis:*</exclude>
             </excludes>
             <includes>
                 <include>*:jar:*</include>
@@ -22,7 +24,8 @@
             <outputDirectory>/endorsed</outputDirectory>
             <includes>
                 <include>org.apache.xerces:*</include>
-                <include>org.apache.xalan:*</include>
+                <include>xalan:*</include>
+                <include>xml-resolver:*</include>
             </includes>
         </dependencySet>
     </dependencySets>
Index: src/main/assembly/bin.xml
===================================================================
--- src/main/assembly/bin.xml	(revision 1501)
+++ src/main/assembly/bin.xml	(revision 1528)
@@ -10,9 +10,11 @@
         <dependencySet>
             <outputDirectory>/lib</outputDirectory>
             <excludes>
+                <exclude>org.opensaml:opensaml:*</exclude>
                 <exclude>org.apache.xerces:*</exclude>
-                <exclude>org.apache.xalan:*</exclude>
-                <exclude>org.opensaml:opensaml:*</exclude>
+                <exclude>xalan:*</exclude>
+                <exclude>xml-resolver:*</exclude>
+                <exclude>xml-apis:*</exclude>
             </excludes>
             <includes>
                 <include>*:jar:*</include>
@@ -22,7 +24,8 @@
             <outputDirectory>/endorsed</outputDirectory>
             <includes>
                 <include>org.apache.xerces:*</include>
-                <include>org.apache.xalan:*</include>
+                <include>xalan:*</include>
+                <include>xml-resolver:*</include>
             </includes>
         </dependencySet>
     </dependencySets>
Index: src/main/java/org/opensaml/ESAPISecurityConfig.java
===================================================================
--- src/main/java/org/opensaml/ESAPISecurityConfig.java	(revision 0)
+++ src/main/java/org/opensaml/ESAPISecurityConfig.java	(revision 1528)
@@ -0,0 +1,371 @@
+/*
+ * Copyright [2011] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml;
+
+import java.io.File;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.List;
+import java.util.regex.Pattern;
+
+import org.owasp.esapi.SecurityConfiguration;
+
+/**
+ * Minimal implementation of OWASP ESAPI {@link SecurityConfiguration}, providing the support used within OpenSAML.
+ */
+public class ESAPISecurityConfig implements SecurityConfiguration {
+
+    /** Constructor. */
+    public ESAPISecurityConfig() {
+    }
+
+    /** {@inheritDoc} */
+    public String getAccessControlImplementation() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public List getAdditionalAllowedCipherModes() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public List getAllowedExecutables() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public List getAllowedFileExtensions() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public int getAllowedFileUploadSize() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public int getAllowedLoginAttempts() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getAllowMixedEncoding() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getAllowMultipleEncoding() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public String getApplicationName() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getAuthenticationImplementation() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getCharacterEncoding() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getCipherTransformation() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public List getCombinedCipherModes() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public List getDefaultCanonicalizationCodecs() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getDigitalSignatureAlgorithm() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public int getDigitalSignatureKeyLength() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getDisableIntrusionDetection() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public String getEncoderImplementation() {
+        return "org.owasp.esapi.reference.DefaultEncoder";
+    }
+
+    /** {@inheritDoc} */
+    public String getEncryptionAlgorithm() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getEncryptionImplementation() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public int getEncryptionKeyLength() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public String getExecutorImplementation() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getFixedIV() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getForceHttpOnlyCookies() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getForceHttpOnlySession() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getForceSecureCookies() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getForceSecureSession() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public String getHashAlgorithm() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public int getHashIterations() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public String getHttpSessionIdName() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getHTTPUtilitiesImplementation() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getIntrusionDetectionImplementation() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getIVType() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getKDFPseudoRandomFunction() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getLenientDatesAccepted() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getLogApplicationName() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getLogEncodingRequired() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public String getLogFileName() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getLogImplementation() {
+        return "org.owasp.esapi.reference.JavaLogFactory";
+    }
+
+    /** {@inheritDoc} */
+    public int getLogLevel() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public boolean getLogServerIP() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public byte[] getMasterKey() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public byte[] getMasterSalt() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public int getMaxHttpHeaderSize() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public int getMaxLogFileSize() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public int getMaxOldPasswordHashes() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public String getPasswordParameterName() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getPreferredJCEProvider() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public Threshold getQuota(String eventName) {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getRandomAlgorithm() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getRandomizerImplementation() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public long getRememberTokenDuration() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public File getResourceFile(String filename) {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public InputStream getResourceStream(String filename) throws IOException {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getResponseContentType() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public int getSessionAbsoluteTimeoutLength() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public int getSessionIdleTimeoutLength() {
+        return 0;
+    }
+
+    /** {@inheritDoc} */
+    public File getUploadDirectory() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public File getUploadTempDirectory() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getUsernameParameterName() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getValidationImplementation() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public Pattern getValidationPattern(String typeName) {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public File getWorkingDirectory() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public boolean overwritePlainText() {
+        return false;
+    }
+
+    /** {@inheritDoc} */
+    public String setCipherTransformation(String cipherXform) {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public void setResourceDirectory(String dir) {
+    }
+
+    /** {@inheritDoc} */
+    public boolean useMACforCipherText() {
+        return false;
+    }
+
+}
\ No newline at end of file
Index: src/main/java/org/opensaml/DefaultBootstrap.java
===================================================================
--- src/main/java/org/opensaml/DefaultBootstrap.java	(revision 1501)
+++ src/main/java/org/opensaml/DefaultBootstrap.java	(revision 1528)
@@ -26,6 +26,7 @@
 import org.opensaml.xml.parse.StaticBasicParserPool;
 import org.opensaml.xml.parse.XMLParserException;
 import org.opensaml.xml.security.DefaultSecurityConfigurationBootstrap;
+import org.owasp.esapi.ESAPI;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -53,7 +54,9 @@
         "/saml1-metadata-config.xml", 
         "/saml2-metadata-config.xml",
         "/saml2-metadata-validation-config.xml", 
+        "/saml2-metadata-attr-config.xml",
         "/saml2-metadata-idp-discovery-config.xml",
+        "/saml2-metadata-ui-config.xml",
         "/saml2-protocol-thirdparty-config.xml",
         "/saml2-metadata-query-config.xml", 
         "/saml2-assertion-delegation-restriction-config.xml",    
@@ -91,9 +94,18 @@
         initializeGlobalSecurityConfiguration();
         
         initializeParserPool();
+        
+        initializeESAPI();
     }
 
     /**
+     * Initializes the OWASPI ESAPI library.
+     */
+    protected static void initializeESAPI() {
+        ESAPI.initialize("org.opensaml.ESAPISecurityConfig");
+    }
+
+    /**
      * Initializes the default global parser pool instance.
      * 
      * <p>
Index: src/main/java/org/opensaml/xacml/policy/impl/SubjectTypeImplBuilder.java
===================================================================
--- src/main/java/org/opensaml/xacml/policy/impl/SubjectTypeImplBuilder.java	(revision 1501)
+++ src/main/java/org/opensaml/xacml/policy/impl/SubjectTypeImplBuilder.java	(revision 1528)
@@ -18,21 +18,20 @@
 package org.opensaml.xacml.policy.impl;
 
 import org.opensaml.xacml.impl.AbstractXACMLObjectBuilder;
-import org.opensaml.xacml.policy.ActionType;
 import org.opensaml.xacml.policy.SubjectType;
 
 /**
- *Builder for {@link SubjectType}.
+ * Builder for {@link SubjectType}.
  */
 public class SubjectTypeImplBuilder extends AbstractXACMLObjectBuilder<SubjectType> {
 
     /** {@inheritDoc} */
     public SubjectType buildObject() {
-        return buildObject(ActionType.DEFAULT_ELEMENT_NAME);
+        return buildObject(SubjectType.DEFAULT_ELEMENT_NAME);
     }
-    
+
     /** {@inheritDoc} */
     public SubjectType buildObject(String namespaceURI, String localName, String namespacePrefix) {
-        return new SubjectTypeImpl(namespaceURI,localName,namespacePrefix);
+        return new SubjectTypeImpl(namespaceURI, localName, namespacePrefix);
     }
 }
\ No newline at end of file
Index: src/main/java/org/opensaml/xacml/policy/impl/ActionTypeMarshaller.java
===================================================================
--- src/main/java/org/opensaml/xacml/policy/impl/ActionTypeMarshaller.java	(revision 1501)
+++ src/main/java/org/opensaml/xacml/policy/impl/ActionTypeMarshaller.java	(revision 1528)
@@ -19,7 +19,7 @@
 import org.opensaml.xacml.impl.AbstractXACMLObjectMarshaller;
 
 /**
- *Marshaller for {@link ActionType}.
+ * Marshaller for {@link org.opensaml.xacml.policy.ActionType}.
  */
 public class ActionTypeMarshaller extends AbstractXACMLObjectMarshaller {
 
Index: src/main/java/org/opensaml/xacml/policy/AttributeDesignatorType.java
===================================================================
--- src/main/java/org/opensaml/xacml/policy/AttributeDesignatorType.java	(revision 1501)
+++ src/main/java/org/opensaml/xacml/policy/AttributeDesignatorType.java	(revision 1528)
@@ -29,45 +29,36 @@
     public static final String SUBJECT_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME = "SubjectAttributeDesignator";
 
     /** QName of the element SubjectAttributeDesignator. */
-    public static final QName SUBJECT_ATTRIBUTE_DESIGNATOR_ELEMENT_NAME = new QName(
-	    XACMLConstants.XACML20_NS,
-	    SUBJECT_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME,
-	    XACMLConstants.XACML_PREFIX);
+    public static final QName SUBJECT_ATTRIBUTE_DESIGNATOR_ELEMENT_NAME = new QName(XACMLConstants.XACML20_NS,
+            SUBJECT_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME, XACMLConstants.XACML_PREFIX);
 
     /** Local name of the element ResourceAttributeDesignator. */
     public static final String RESOURCE_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME = "ResourceAttributeDesignator";
 
     /** QName of the element ResourceAttributeDesignator. */
-    public static final QName RESOURCE_ATTRIBUTE_DESIGNATOR_ELEMENT_NAME = new QName(
-	    XACMLConstants.XACML20_NS,
-	    RESOURCE_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME,
-	    XACMLConstants.XACML_PREFIX);
+    public static final QName RESOURCE_ATTRIBUTE_DESIGNATOR_ELEMENT_NAME = new QName(XACMLConstants.XACML20_NS,
+            RESOURCE_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME, XACMLConstants.XACML_PREFIX);
 
     /** Local name of the element ActionAttributeDesignator. */
     public static final String ACTION_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME = "ActionAttributeDesignator";
 
     /** QName of the element ActionAttributeDesignator. */
-    public static final QName ACTION_ATTRIBUTE_DESIGNATOR_ELEMENT_NAME = new QName(
-	    XACMLConstants.XACML20_NS,
-	    ACTION_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME,
-	    XACMLConstants.XACML_PREFIX);
+    public static final QName ACTION_ATTRIBUTE_DESIGNATOR_ELEMENT_NAME = new QName(XACMLConstants.XACML20_NS,
+            ACTION_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME, XACMLConstants.XACML_PREFIX);
 
     /** Local name of the element EnvironmentAttribtueDesignator. */
-    public static final String ENVIRONMENT_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME = "EnvironmentAttribtueDesignator";
+    public static final String ENVIRONMENT_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME = "EnvironmentAttributeDesignator";
 
     /** QName of the element EnvironmentAttribtueDesignator. */
-    public static final QName ENVIRONMENT_ATTRIBUTE_DESIGNATOR_ELEMENT_NAME = new QName(
-	    XACMLConstants.XACML20_NS,
-	    ENVIRONMENT_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME,
-	    XACMLConstants.XACML_PREFIX);
+    public static final QName ENVIRONMENT_ATTRIBUTE_DESIGNATOR_ELEMENT_NAME = new QName(XACMLConstants.XACML20_NS,
+            ENVIRONMENT_ATTRIBUTE_DESIGNATOR_ELEMENT_LOCAL_NAME, XACMLConstants.XACML_PREFIX);
 
     /** Local name of the XSI type. */
     public static final String SCHEMA_TYPE_LOCAL_NAME = "AttributeDesignatorType";
 
     /** QName of the XSI type. */
-    public static final QName SCHEMA_TYPE_NAME = new QName(
-	    XACMLConstants.XACML20_NS, SCHEMA_TYPE_LOCAL_NAME,
-	    XACMLConstants.XACML_PREFIX);
+    public static final QName SCHEMA_TYPE_NAME = new QName(XACMLConstants.XACML20_NS, SCHEMA_TYPE_LOCAL_NAME,
+            XACMLConstants.XACML_PREFIX);
 
     /** AttribtueId attribute name. */
     public static final String ATTRIBUTE_ID_ATTRIB_NAME = "AttributeId";
@@ -91,8 +82,7 @@
     /**
      * Sets the ID of the designated attribute.
      * 
-     * @param id
-     *                ID of the designated attribute
+     * @param id ID of the designated attribute
      */
     public void setAttribtueId(String id);
 
@@ -106,8 +96,7 @@
     /**
      * Sets the data type of the designated attribute.
      * 
-     * @param type
-     *                data type of the designated attribute
+     * @param type data type of the designated attribute
      */
     public void setDataType(String type);
 
@@ -121,8 +110,7 @@
     /**
      * Sets the issuer of the designated attribute.
      * 
-     * @param issuer
-     *                issuer of the designated attribute
+     * @param issuer issuer of the designated attribute
      */
     public void setIssuer(String issuer);
 
@@ -136,16 +124,14 @@
     /**
      * Sets whether the designated attribute must be present.
      * 
-     * @param present
-     *                whether the designated attribute must be present
+     * @param present whether the designated attribute must be present
      */
     public void setMustBePresentXSBoolean(XSBooleanValue present);
 
     /**
      * Sets whether the designated attribute must be present.
      * 
-     * @param present
-     *                whether the designated attribute must be present
+     * @param present whether the designated attribute must be present
      */
     public void setMustBePresent(Boolean present);
 
Index: src/main/java/org/opensaml/Version.java
===================================================================
--- src/main/java/org/opensaml/Version.java	(revision 1501)
+++ src/main/java/org/opensaml/Version.java	(revision 1528)
@@ -17,8 +17,27 @@
 package org.opensaml;
 
 /** Class for printing the version of this library. */
-public class Version {
+public final class Version {
 
+    /** Name of the library. */
+    private static final String NAME;
+
+    /** Library version. */
+    private static final String VERSION;
+
+    /** Library major version number. */
+    private static final int MAJOR_VERSION;
+
+    /** Library minor version number. */
+    private static final int MINOR_VERSION;
+
+    /** Library micro version number. */
+    private static final int MICRO_VERSION;
+
+    /** Constructor. */
+    private Version() {
+    }
+
     /**
      * Main entry point to program.
      * 
@@ -26,6 +45,61 @@
      */
     public static void main(String[] args) {
         Package pkg = Version.class.getPackage();
-        System.out.println(pkg.getImplementationTitle() + " version " + pkg.getImplementationVersion());
+        System.out.println(NAME + " version " + VERSION);
     }
+
+    /**
+     * Gets the name of the library.
+     * 
+     * @return name of the library
+     */
+    public static String getName() {
+        return NAME;
+    }
+
+    /**
+     * Gets the version of the library.
+     * 
+     * @return version of the library
+     */
+    public static String getVersion() {
+        return VERSION;
+    }
+
+    /**
+     * Gets the major version number of the library.
+     * 
+     * @return major version number of the library
+     */
+    public static int getMajorVersion() {
+        return MAJOR_VERSION;
+    }
+
+    /**
+     * Gets the minor version number of the library.
+     * 
+     * @return minor version number of the library
+     */
+    public static int getMinorVersion() {
+        return MINOR_VERSION;
+    }
+
+    /**
+     * Gets the micro version number of the library.
+     * 
+     * @return micro version number of the library
+     */
+    public static int getMicroVersion() {
+        return MICRO_VERSION;
+    }
+
+    static {
+        Package pkg = Version.class.getPackage();
+        NAME = pkg.getImplementationTitle().intern();
+        VERSION = pkg.getImplementationVersion().intern();
+        String[] versionParts = VERSION.split(".");
+        MAJOR_VERSION = Integer.parseInt(versionParts[0]);
+        MINOR_VERSION = Integer.parseInt(versionParts[1]);
+        MICRO_VERSION = Integer.parseInt(versionParts[2]);
+    }
 }
\ No newline at end of file
Index: src/main/java/org/opensaml/security/package.html
===================================================================
--- src/main/java/org/opensaml/security/package.html	(revision 1501)
+++ src/main/java/org/opensaml/security/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Classes related to verifying various credentials within a SAML system.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/common/xml/SAMLConstants.java
===================================================================
--- src/main/java/org/opensaml/common/xml/SAMLConstants.java	(revision 1501)
+++ src/main/java/org/opensaml/common/xml/SAMLConstants.java	(revision 1528)
@@ -190,6 +190,15 @@
     /** SAML 2.0 Condition for Delegation Restriction QName prefix. */
     public static final String SAML20DEL_PREFIX = "del";
     
+    /** SAML V2.0 Metadata Extension for Entity Attributes schema ID . */
+    public static final String SAML20MDATTR_SCHEMA_LOCATION = SCHEMA_DIR + "sstc-metadata-attr.xsd";
+    
+    /** SAML V2.0 Metadata Extension for Entity Attributes XML Namespace. */
+    public static final String SAML20MDATTR_NS = "urn:oasis:names:tc:SAML:metadata:attribute";
+    
+    /** SAML V2.0 Metadata Extension for Entity Attributes QName prefix. */
+    public static final String SAML20MDATTR_PREFIX = "mdattr";
+    
     /** SAML 2.0 DCE PAC Attribute Profile schema Id. */
     public static final String SAML20DCE_SCHEMA_LOCATION = SCHEMA_DIR + "saml-schema-dce-2.0.xsd";
     
Index: src/main/java/org/opensaml/common/xml/package.html
===================================================================
--- src/main/java/org/opensaml/common/xml/package.html	(revision 1501)
+++ src/main/java/org/opensaml/common/xml/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/common/impl/package.html
===================================================================
--- src/main/java/org/opensaml/common/impl/package.html	(revision 1501)
+++ src/main/java/org/opensaml/common/impl/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/common/package.html
===================================================================
--- src/main/java/org/opensaml/common/package.html	(revision 1501)
+++ src/main/java/org/opensaml/common/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Base classes for working with SAML as Java objects.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml1/core/validator/package.html
===================================================================
--- src/main/java/org/opensaml/saml1/core/validator/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml1/core/validator/package.html	(revision 1528)
@@ -6,10 +6,10 @@
 the objects adhere to the additional constraints placed upon the object by the SAML 1.0/1.1 specification.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml1/core/impl/package.html
===================================================================
--- src/main/java/org/opensaml/saml1/core/impl/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml1/core/impl/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml1/core/package.html
===================================================================
--- src/main/java/org/opensaml/saml1/core/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml1/core/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml1/binding/encoding/HTTPPostEncoder.java
===================================================================
--- src/main/java/org/opensaml/saml1/binding/encoding/HTTPPostEncoder.java	(revision 1501)
+++ src/main/java/org/opensaml/saml1/binding/encoding/HTTPPostEncoder.java	(revision 1528)
@@ -33,6 +33,8 @@
 import org.opensaml.ws.transport.http.HTTPTransportUtils;
 import org.opensaml.xml.util.Base64;
 import org.opensaml.xml.util.XMLHelper;
+import org.owasp.esapi.ESAPI;
+import org.owasp.esapi.Encoder;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -122,9 +124,11 @@
 
         try {
             VelocityContext context = new VelocityContext();
+            Encoder esapiEncoder = ESAPI.encoder();
 
-            log.debug("Encoding action url of: {}", endpointURL);
-            context.put("action", endpointURL);
+            String encodedEndpointURL = esapiEncoder.encodeForHTMLAttribute(endpointURL);
+            log.debug("Encoding action url of '{}' with encoded value '{}'", endpointURL, encodedEndpointURL);
+            context.put("action", encodedEndpointURL);
 
             log.debug("Marshalling and Base64 encoding SAML message");
             String messageXML = XMLHelper.nodeToString(marshallMessage(messageContext.getOutboundSAMLMessage()));
@@ -132,8 +136,9 @@
             context.put("SAMLResponse", encodedMessage);
 
             if (messageContext.getRelayState() != null) {
-                log.debug("Setting TARGET parameter to: {}", messageContext.getRelayState());
-                context.put("TARGET", messageContext.getRelayState());
+                String encodedRelayState = esapiEncoder.encodeForHTMLAttribute(messageContext.getRelayState());
+                log.debug("Setting TARGET parameter to: '{}', encoded as '{}'", messageContext.getRelayState(), encodedRelayState);
+                context.put("TARGET", encodedRelayState);
             }
 
             HTTPOutTransport outTransport = (HTTPOutTransport) messageContext.getOutboundMessageTransport();
Index: src/main/java/org/opensaml/saml1/binding/package.html
===================================================================
--- src/main/java/org/opensaml/saml1/binding/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml1/binding/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Classes for working with SAML 1 bindings.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/saml2delrestrict/impl/package.html
===================================================================
--- src/main/java/org/opensaml/samlext/saml2delrestrict/impl/package.html	(revision 1501)
+++ src/main/java/org/opensaml/samlext/saml2delrestrict/impl/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Implementation for SAML 2 Condition for Delegation Restriction.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/saml2delrestrict/package.html
===================================================================
--- src/main/java/org/opensaml/samlext/saml2delrestrict/package.html	(revision 1501)
+++ src/main/java/org/opensaml/samlext/saml2delrestrict/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Interfaces for SAML 2 Condition for Delegation Restriction.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/saml2mdquery/impl/package.html
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdquery/impl/package.html	(revision 1501)
+++ src/main/java/org/opensaml/samlext/saml2mdquery/impl/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Implemention for SAML 2 metadata standalone query endpoints profile objects.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/saml2mdquery/package.html
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdquery/package.html	(revision 1501)
+++ src/main/java/org/opensaml/samlext/saml2mdquery/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Interfaces for SAML 2 metadata standalone query endpoints profile.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/samlpthrpty/impl/package.html
===================================================================
--- src/main/java/org/opensaml/samlext/samlpthrpty/impl/package.html	(revision 1501)
+++ src/main/java/org/opensaml/samlext/samlpthrpty/impl/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Implementation for SAML 2 protocol third-party response profile objects.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/samlpthrpty/package.html
===================================================================
--- src/main/java/org/opensaml/samlext/samlpthrpty/package.html	(revision 1501)
+++ src/main/java/org/opensaml/samlext/samlpthrpty/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Interfaces for SAML 2 protocol third-party response profile.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesUnmarshaller.java	(revision 1528)
@@ -0,0 +1,41 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdattr.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.saml2.core.Assertion;
+import org.opensaml.saml2.core.Attribute;
+import org.opensaml.samlext.saml2mdattr.EntityAttributes;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.UnmarshallingException;
+
+/** A thread-safe Unmarshaller for {@link org.opensaml.samlext.saml2mdattr.EntityAttributes}. */
+public class EntityAttributesUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    /** {@inheritDoc} */
+    protected void processChildElement(XMLObject parentObject, XMLObject childObject) throws UnmarshallingException {
+        EntityAttributes entityAttrs = (EntityAttributes) parentObject;
+
+        if (childObject instanceof Attribute) {
+            entityAttrs.getAttributes().add((Attribute) childObject);
+        } else if (childObject instanceof Assertion) {
+            entityAttrs.getAssertions().add((Assertion) childObject);
+        } else {
+            super.processChildElement(parentObject, childObject);
+        }
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesImpl.java	(revision 1528)
@@ -0,0 +1,72 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdattr.impl;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+import org.opensaml.common.SAMLObject;
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.saml2.core.Assertion;
+import org.opensaml.saml2.core.Attribute;
+import org.opensaml.saml2.core.Evidentiary;
+import org.opensaml.samlext.saml2mdattr.EntityAttributes;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.util.IndexedXMLObjectChildrenList;
+
+/** Concrete implementation of {@link EntityAttributes}. */
+public class EntityAttributesImpl extends AbstractSAMLObject implements EntityAttributes {
+
+    /** Assertion of the Evidence. */
+    private final IndexedXMLObjectChildrenList<? extends SAMLObject> attributeInfo;
+
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespace the element is in
+     * @param elementLocalName the local name of the XML element this Object represents
+     * @param namespacePrefix the prefix for the given namespace
+     */
+    protected EntityAttributesImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+        attributeInfo = new IndexedXMLObjectChildrenList<Evidentiary>(this);
+    }
+
+    /** {@inheritDoc} */
+    public List<Attribute> getAttributes() {
+        return (List<Attribute>) attributeInfo.subList(Attribute.DEFAULT_ELEMENT_NAME);
+    }
+
+    /** {@inheritDoc} */
+    public List<Assertion> getAssertions() {
+        return (List<Assertion>) attributeInfo.subList(Assertion.DEFAULT_ELEMENT_NAME);
+    }
+
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        ArrayList<XMLObject> children = new ArrayList<XMLObject>();
+
+        if (attributeInfo.size() == 0) {
+            return null;
+        }
+
+        children.addAll(attributeInfo);
+
+        return Collections.unmodifiableList(children);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesBuilder.java	(revision 1528)
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdattr.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdattr.EntityAttributes;
+
+/** Builder of {@link EntityAttributesImpl} objects. */
+public class EntityAttributesBuilder extends AbstractSAMLObjectBuilder<EntityAttributes> {
+
+    /** Constructor. */
+    public EntityAttributesBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public EntityAttributes buildObject() {
+        return buildObject(EntityAttributes.DEFAULT_ELEMENT_NAME);
+    }
+
+    /** {@inheritDoc} */
+    public EntityAttributes buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new EntityAttributesImpl(namespaceURI, localName, namespacePrefix);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesMarshaller.java	(revision 1528)
@@ -0,0 +1,24 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdattr.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+
+/** A thread-safe Marshaller for {@link org.opensaml.samlext.saml2mdattr.EntityAttributes}. */
+public class EntityAttributesMarshaller extends AbstractSAMLObjectMarshaller {
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdattr/impl/EntityAttributesMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdattr/EntityAttributes.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdattr/EntityAttributes.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdattr/EntityAttributes.java	(revision 1528)
@@ -0,0 +1,58 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdattr;
+
+import java.util.List;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.SAMLObject;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.saml2.core.Assertion;
+import org.opensaml.saml2.core.Attribute;
+
+/** SAML V2.0 Metadata Extension for Entity Attributes EntityAttributes SAML object. */
+public interface EntityAttributes extends SAMLObject {
+
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "EntityAttributes";
+
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME =
+        new QName(SAMLConstants.SAML20MDATTR_NS, DEFAULT_ELEMENT_LOCAL_NAME, SAMLConstants.SAML20MDATTR_PREFIX);
+    
+    /** Local name of the XSI type. */
+    public static final String TYPE_LOCAL_NAME = "EntityAttributesType";
+
+    /** QName of the XSI type. */
+    public static final QName TYPE_NAME =
+        new QName(SAMLConstants.SAML20MDATTR_NS, TYPE_LOCAL_NAME, SAMLConstants.SAML20MDATTR_PREFIX);
+    
+    /**
+     * Gets the attributes about the entity.
+     * 
+     * @return attributes about the entity
+     */
+    public List<Attribute> getAttributes();
+    
+    /**
+     * Gets the assertions about the entity.
+     * 
+     * @return assertions about the entity
+     */
+    public List<Assertion> getAssertions();
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdattr/EntityAttributes.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/Logo.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/Logo.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/Logo.java	(revision 1528)
@@ -0,0 +1,87 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.SAMLObject;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.xml.LangBearing;
+
+/**
+ * Localized logo type.
+ * 
+ * 
+ * @author RDW 27/Aug/2010
+ * 
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *  
+ */
+public interface Logo extends LangBearing, SAMLObject {
+
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "Logo";
+    
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(UIInfo.MDUI_NS, 
+            DEFAULT_ELEMENT_LOCAL_NAME, UIInfo.MDUI_PREFIX);
+    
+    /** Attribute label. */
+    public static final String HEIGHT_ATTR_NAME = "height";
+
+    /** Attribute label. */
+    public static final String WIDTH_ATTR_NAME = "width";
+
+
+    /**
+     * Gets the URL.
+     * 
+     * @return the URL
+     */
+    public String getURL();
+    
+    /**
+     * Sets the URL.
+     * 
+     * @param newURL the URL
+     */
+    public void setURL(String newURL);
+
+    /**
+     * Get the height of the logo.
+     * @return the height of the logo
+     */
+    public Integer getHeight();
+    
+    /**
+     * Sets the height of the logo.
+     * @param newHeight the height of the logo
+     */
+    public void setHeight(Integer newHeight);
+
+    /**
+     * Get the width of the logo.
+     * @return the width of the logo
+     */
+    public Integer getWidth();
+    
+    /**
+     * Sets the width of the logo.
+     * @param newWidth the height of the logo
+     */
+    public void setWidth(Integer newWidth);
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/Logo.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintMarshaller.java	(revision 1528)
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+import org.opensaml.samlext.saml2mdui.GeolocationHint;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.MarshallingException;
+import org.opensaml.xml.util.XMLHelper;
+import org.w3c.dom.Element;
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.GeolocationHint} objects.
+ */
+public class GeolocationHintMarshaller extends AbstractSAMLObjectMarshaller {
+
+    /** {@inheritDoc} */
+    protected void marshallElementContent(XMLObject samlObject, Element domElement) throws MarshallingException {
+        GeolocationHint name = (GeolocationHint) samlObject;
+
+        if (name.getHint() != null) {
+            XMLHelper.appendTextContent(domElement, name.getHint());
+        }
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIMarshaller.java	(revision 1528)
@@ -0,0 +1,56 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.samlext.saml2mdui.LocalizedURI;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.MarshallingException;
+import org.opensaml.xml.util.XMLHelper;
+import org.w3c.dom.Attr;
+import org.w3c.dom.Element;
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.LocalizedURI} objects.
+ */
+public class LocalizedURIMarshaller extends AbstractSAMLObjectMarshaller {
+
+    /**
+     * {@inheritDoc}
+     */
+    protected void marshallAttributes(XMLObject samlObject, Element domElement) throws MarshallingException {
+        LocalizedURI name = (LocalizedURI) samlObject;
+
+        if (name.getURI() != null) {
+            Attr attribute = XMLHelper.constructAttribute(domElement.getOwnerDocument(), SAMLConstants.XML_NS,
+                    LangBearing.XML_LANG_ATTR_LOCAL_NAME, SAMLConstants.XML_PREFIX);
+            attribute.setValue(name.getURI().getLanguage());
+            domElement.setAttributeNodeNS(attribute);
+        }
+    }
+
+    /** {@inheritDoc} */
+    protected void marshallElementContent(XMLObject samlObject, Element domElement) throws MarshallingException {
+        LocalizedURI name = (LocalizedURI) samlObject;
+
+        if (name.getURI() != null) {
+            XMLHelper.appendTextContent(domElement, name.getURI().getLocalString());
+        }
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintBuilder.java	(revision 1528)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.DiscoHints;
+import org.opensaml.samlext.saml2mdui.IPHint;
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.IPHint} objects.
+ */
+public class IPHintBuilder extends AbstractSAMLObjectBuilder<IPHint> {
+
+    /**
+     * Constructor.
+     */
+    public IPHintBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public IPHint buildObject() {
+        return buildObject(DiscoHints.MDUI_NS, 
+                           IPHint.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           DiscoHints.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public IPHint buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new IPHintImpl(namespaceURI, localName, namespacePrefix);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLUnmarshaller.java	(revision 1528)
@@ -0,0 +1,24 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.PrivacyStatementURL} objects.
+ */
+public class PrivacyStatementURLUnmarshaller extends LocalizedURIUnmarshaller {
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionImpl.java	(revision 1528)
@@ -0,0 +1,48 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.Description;
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.Description}.
+ */
+public class DescriptionImpl extends LocalizedNameImpl implements Description {
+
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespaceURI
+     * @param elementLocalName the elementLocalName
+     * @param namespacePrefix the namespacePrefix
+     */
+    protected DescriptionImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+    /** {@inheritDoc} */
+    public LocalizedString getDescription() {
+        return getName();
+    }
+
+    /** {@inheritDoc} */
+    public void setDescription(LocalizedString newDescription) {
+        setName(newDescription);
+    }
+
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintMarshaller.java	(revision 1528)
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+import org.opensaml.samlext.saml2mdui.DomainHint;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.MarshallingException;
+import org.opensaml.xml.util.XMLHelper;
+import org.w3c.dom.Element;
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.DomainHint} objects.
+ */
+public class DomainHintMarshaller extends AbstractSAMLObjectMarshaller {
+
+    /** {@inheritDoc} */
+    protected void marshallElementContent(XMLObject samlObject, Element domElement) throws MarshallingException {
+        DomainHint name = (DomainHint) samlObject;
+
+        if (name.getHint() != null) {
+            XMLHelper.appendTextContent(domElement, name.getHint());
+        }
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintMarshaller.java	(revision 1528)
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+import org.opensaml.samlext.saml2mdui.IPHint;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.MarshallingException;
+import org.opensaml.xml.util.XMLHelper;
+import org.w3c.dom.Element;
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.IPHint} objects.
+ */
+public class IPHintMarshaller extends AbstractSAMLObjectMarshaller {
+
+    /** {@inheritDoc} */
+    protected void marshallElementContent(XMLObject samlObject, Element domElement) throws MarshallingException {
+        IPHint name = (IPHint) samlObject;
+
+        if (name.getHint() != null) {
+            XMLHelper.appendTextContent(domElement, name.getHint());
+        }
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoUnmarshaller.java	(revision 1528)
@@ -0,0 +1,56 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.samlext.saml2mdui.Description;
+import org.opensaml.samlext.saml2mdui.DisplayName;
+import org.opensaml.samlext.saml2mdui.InformationURL;
+import org.opensaml.samlext.saml2mdui.Keywords;
+import org.opensaml.samlext.saml2mdui.Logo;
+import org.opensaml.samlext.saml2mdui.PrivacyStatementURL;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.UnmarshallingException;
+
+/**
+ * A thread-safe Unmarshaller for {@link org.opensaml.samlext.saml2mdui.UIInfo} objects.
+ */
+public class UIInfoUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    /** {@inheritDoc} */
+    protected void processChildElement(XMLObject parentSAMLObject, XMLObject childSAMLObject)
+            throws UnmarshallingException {
+        UIInfo info = (UIInfo) parentSAMLObject;
+
+        if (childSAMLObject instanceof Description) {
+            info.getDescriptions().add((Description) childSAMLObject);
+        } else if (childSAMLObject instanceof DisplayName) {
+            info.getDisplayNames().add((DisplayName) childSAMLObject);
+        } else if (childSAMLObject instanceof Keywords) {
+            info.getKeywords().add((Keywords) childSAMLObject);
+        } else if (childSAMLObject instanceof InformationURL) {
+            info.getInformationURLs().add((InformationURL) childSAMLObject);
+        } else if (childSAMLObject instanceof Logo) {
+            info.getLogos().add((Logo) childSAMLObject);
+        } else if (childSAMLObject instanceof PrivacyStatementURL) {
+            info.getPrivacyStatementURLs().add((PrivacyStatementURL) childSAMLObject);
+        } else {
+            super.processChildElement(parentSAMLObject, childSAMLObject);
+        }
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintImpl.java	(revision 1528)
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.List;
+
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.samlext.saml2mdui.GeolocationHint;
+import org.opensaml.xml.XMLObject;
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.GeolocationHint}.
+ */
+public class GeolocationHintImpl extends AbstractSAMLObject implements GeolocationHint {
+
+    /**
+     * local storage.
+     */
+    private String hint;
+    
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespaceURI
+     * @param elementLocalName the elementLocalName
+     * @param namespacePrefix the namespacePrefix
+     */
+    protected GeolocationHintImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+    /** {@inheritDoc} */
+    public String getHint() {
+        return hint;
+    }
+
+    /** {@inheritDoc} */
+    public void setHint(String newHint) {
+        hint = prepareForAssignment(hint, newHint);
+    }
+
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        return null;
+    }
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIImpl.java	(revision 1528)
@@ -0,0 +1,76 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.List;
+
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.LocalizedURI;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.util.DatatypeHelper;
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.LocalizedURI}.
+ */
+public class LocalizedURIImpl extends AbstractSAMLObject implements LocalizedURI{
+
+    /** Display name. */
+    private LocalizedString uri;
+
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespaceURI
+     * @param elementLocalName the elementLocalName
+     * @param namespacePrefix the namespacePrefix
+     */
+    protected LocalizedURIImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+    /** {@inheritDoc} */
+    public LocalizedString getURI() {
+        return uri;
+    }
+
+    /** {@inheritDoc} */
+    public void setURI(LocalizedString newURI) {
+        uri = prepareForAssignment(uri, newURI);
+        boolean hasXMLLang = false;
+        if (uri != null && !DatatypeHelper.isEmpty(uri.getLanguage())) {
+            hasXMLLang = true;
+        }
+        manageQualifiedAttributeNamespace(LangBearing.XML_LANG_ATTR_NAME, hasXMLLang);
+    }
+
+    /** {@inheritDoc} */
+    public String getXMLLang() {
+        return uri.getLanguage();
+    }
+
+    /** {@inheritDoc} */
+    public void setXMLLang(String newLang) {
+        uri.setLanguage(newLang);
+    }
+
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        return null;
+    }
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoMarshaller.java	(revision 1528)
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.samlext.saml2mdui.Logo;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.MarshallingException;
+import org.opensaml.xml.util.XMLHelper;
+import org.w3c.dom.Attr;
+import org.w3c.dom.Element;
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.Logo} objects.
+ */
+public class LogoMarshaller extends AbstractSAMLObjectMarshaller {
+
+    /**
+     * {@inheritDoc}
+     */
+    protected void marshallAttributes(XMLObject samlObject, Element domElement) throws MarshallingException {
+        Logo logo = (Logo) samlObject;
+
+        if (logo.getXMLLang() != null) {
+            Attr attribute = XMLHelper.constructAttribute(domElement.getOwnerDocument(), SAMLConstants.XML_NS,
+                    LangBearing.XML_LANG_ATTR_LOCAL_NAME, SAMLConstants.XML_PREFIX);
+            attribute.setValue(logo.getXMLLang());
+            domElement.setAttributeNodeNS(attribute);
+        }
+        if (logo.getHeight() != null) {
+            domElement.setAttributeNS(null, Logo.HEIGHT_ATTR_NAME, logo.getHeight().toString());
+        }
+        if (logo.getWidth() != null) {
+            domElement.setAttributeNS(null, Logo.WIDTH_ATTR_NAME, logo.getWidth().toString());
+        }
+    }
+
+    /** {@inheritDoc} */
+    protected void marshallElementContent(XMLObject samlObject, Element domElement) throws MarshallingException {
+        Logo logo = (Logo) samlObject;
+
+        if (logo.getURL() != null) {
+            XMLHelper.appendTextContent(domElement, logo.getURL());
+        }
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintImpl.java	(revision 1528)
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.List;
+
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.samlext.saml2mdui.DomainHint;
+import org.opensaml.xml.XMLObject;
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.DomainHint}.
+ */
+public class DomainHintImpl extends AbstractSAMLObject implements DomainHint{
+
+    /**
+     * local storage.
+     */
+    private String hint;
+    
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespaceURI
+     * @param elementLocalName the elementLocalName
+     * @param namespacePrefix the namespacePrefix
+     */
+    protected DomainHintImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+    /** {@inheritDoc} */
+    public String getHint() {
+        return hint;
+    }
+
+    /** {@inheritDoc} */
+    public void setHint(String newHint) {
+        hint = prepareForAssignment(hint, newHint);
+    }
+
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        return null;
+    }
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintImpl.java	(revision 1528)
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.List;
+
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.samlext.saml2mdui.IPHint;
+import org.opensaml.xml.XMLObject;
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.IPHint}.
+ */
+public class IPHintImpl extends AbstractSAMLObject implements IPHint {
+
+    /**
+     * local storage.
+     */
+    private String hint;
+    
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespaceURI
+     * @param elementLocalName the elementLocalName
+     * @param namespacePrefix the namespacePrefix
+     */
+    protected IPHintImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+    /** {@inheritDoc} */
+    public String getHint() {
+        return hint;
+    }
+
+    /** {@inheritDoc} */
+    public void setHint(String newHint) {
+        hint = prepareForAssignment(hint, newHint);
+    }
+
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        return null;
+    }
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsBuilder.java	(revision 1528)
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.DiscoHints;
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.UIInfo}.
+ */
+public class DiscoHintsBuilder extends AbstractSAMLObjectBuilder<DiscoHints> {
+
+    /**
+     * Constructor.
+     */
+    public DiscoHintsBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public DiscoHints buildObject() {
+        return buildObject(DiscoHints.MDUI_NS, 
+                           DiscoHints.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           DiscoHints.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public DiscoHints buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new DiscoHintsImpl(namespaceURI, localName, namespacePrefix);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLBuilder.java	(revision 1528)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.InformationURL;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.InformationURL} objects.
+ * @author Rod Widdowson
+ */
+public class InformationURLBuilder extends AbstractSAMLObjectBuilder<InformationURL> {
+    /**
+     * Constructor.
+     */
+    public InformationURLBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public InformationURL buildObject() {
+        return buildObject(UIInfo.MDUI_NS, 
+                           InformationURL.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           UIInfo.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public InformationURL buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new InformationURLImpl(namespaceURI, localName, namespacePrefix);
+    }
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameMarshaller.java	(revision 1528)
@@ -0,0 +1,32 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.MarshallingException;
+import org.opensaml.xml.util.XMLHelper;
+import org.w3c.dom.Attr;
+import org.w3c.dom.Element;
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.DisplayName} objects.
+ */
+public class DisplayNameMarshaller extends LocalizedNameMarshaller {
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoImpl.java	(revision 1528)
@@ -0,0 +1,115 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.List;
+
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.samlext.saml2mdui.Logo;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.util.DatatypeHelper;
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.Logo}.
+ * @author rod widdowson
+ */
+public class LogoImpl extends AbstractSAMLObject implements Logo {
+    
+    /** Logo URL. */
+    private String url;
+    
+    /** Language. */
+    private String lang;
+
+    /** X-Dimension of the logo. */
+    private Integer width;
+
+    /** Y-Dimension of the logo. */
+    private Integer height;
+
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI namespaceURI
+     * @param elementLocalName elementLocalName
+     * @param namespacePrefix namespacePrefix
+     */
+    protected LogoImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+
+    /** {@inheritDoc} */
+    public Integer getHeight() {
+        return height;
+    }
+
+    /** {@inheritDoc} */
+    public void setHeight(Integer newHeight) {
+         height = prepareForAssignment(height, newHeight);
+    }
+
+    /** {@inheritDoc} */
+    public Integer getWidth() {
+        return width;
+    }
+
+    /** {@inheritDoc} */
+    public void setWidth(Integer newWidth) {
+        width = prepareForAssignment(width, newWidth);
+    }
+
+    /** {@inheritDoc} */
+    public String getURL() {
+        return url;
+    }
+
+    /** {@inheritDoc} */
+    public void setURL(String newURL) {
+       url = prepareForAssignment(url, newURL);
+    }
+
+    /** {@inheritDoc} */
+    public String getXMLLang() {
+        return lang;
+    }
+
+    /** {@inheritDoc} */
+    public void setXMLLang(String newLang) {
+        boolean hasValue = newLang != null && !DatatypeHelper.isEmpty(newLang);
+        lang = prepareForAssignment(lang, newLang);
+        manageQualifiedAttributeNamespace(LangBearing.XML_LANG_ATTR_NAME, hasValue);
+    }
+
+
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        return null;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public int hashCode() {
+        int hash = url.hashCode();
+        hash = hash * 31 + lang.hashCode();
+        hash = hash * 31 + height;
+        hash = hash * 31 + width;
+        return hash;
+    }
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsMarshaller.java	(revision 1528)
@@ -0,0 +1,27 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+
+/**
+ * A thread safe Marshaller for {@link  org.opensaml.samlext.saml2mdui.DiscoHints} objects.
+ */
+public class DiscoHintsMarshaller extends AbstractSAMLObjectMarshaller {
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameUnmarshaller.java	(revision 1528)
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.LocalizedName;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.UnmarshallingException;
+import org.w3c.dom.Attr;
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.LocalizedName} objects.
+ */
+public class LocalizedNameUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    /**
+     * {@inheritDoc}
+     */
+    protected void processAttribute(XMLObject samlObject, Attr attribute) throws UnmarshallingException {
+        if (attribute.getLocalName().equals(LangBearing.XML_LANG_ATTR_LOCAL_NAME)
+                && SAMLConstants.XML_NS.equals(attribute.getNamespaceURI())) {
+            LocalizedName name = (LocalizedName) samlObject;
+
+            LocalizedString nameStr = name.getName();
+            if (nameStr == null) {
+                nameStr = new LocalizedString();
+            }
+
+            nameStr.setLanguage(attribute.getValue());
+            name.setName(nameStr);
+        }
+    }
+
+    /** {@inheritDoc} */
+    protected void processElementContent(XMLObject samlObject, String elementContent) {
+        LocalizedName name = (LocalizedName) samlObject;
+
+        LocalizedString nameStr = name.getName();
+        if (nameStr == null) {
+            nameStr = new LocalizedString();
+        }
+
+        nameStr.setLocalizedString(elementContent);
+        name.setName(nameStr);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsUnmarshaller.java	(revision 1528)
@@ -0,0 +1,58 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.ArrayList;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.samlext.saml2mdui.Keywords;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.UnmarshallingException;
+import org.w3c.dom.Attr;
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.Keywords} objects.
+ */
+public class KeywordsUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    /**
+     * {@inheritDoc}
+     */
+    protected void processAttribute(XMLObject samlObject, Attr attribute) throws UnmarshallingException {
+        if (attribute.getLocalName().equals(LangBearing.XML_LANG_ATTR_LOCAL_NAME)
+                && SAMLConstants.XML_NS.equals(attribute.getNamespaceURI())) {
+            Keywords keywords = (Keywords) samlObject;
+
+            keywords.setXMLLang(attribute.getValue());
+        }
+    }
+
+    /** {@inheritDoc} */
+    protected void processElementContent(XMLObject samlObject, String elementContent) {
+        Keywords keywords = (Keywords) samlObject;
+        String[] words = elementContent.split("\\s+");
+        ArrayList<String> wordlist = new ArrayList<String>(words.length);
+        
+        for (String s : words) {
+            wordlist.add(s);
+        }
+
+        keywords.setKeywords(wordlist);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLUnmarshaller.java	(revision 1528)
@@ -0,0 +1,23 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.InformationURL} objects.
+ */
+public class InformationURLUnmarshaller extends LocalizedURIUnmarshaller {
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameImpl.java	(revision 1528)
@@ -0,0 +1,36 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.samlext.saml2mdui.DisplayName;
+
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.DisplayName}.
+ */
+public class DisplayNameImpl extends LocalizedNameImpl implements DisplayName {
+
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespaceURI
+     * @param elementLocalName the elementLocalName
+     * @param namespacePrefix the namespacePrefix
+     */
+    protected DisplayNameImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsImpl.java	(revision 1528)
@@ -0,0 +1,80 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.samlext.saml2mdui.DiscoHints;
+import org.opensaml.samlext.saml2mdui.DomainHint;
+import org.opensaml.samlext.saml2mdui.GeolocationHint;
+import org.opensaml.samlext.saml2mdui.IPHint;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.util.XMLObjectChildrenList;
+
+/** Concrete implementation of {@link org.opensaml.samlext.saml2mdui.DiscoHints}. */
+public class DiscoHintsImpl extends AbstractSAMLObject implements DiscoHints {
+
+    /** DNS Domain hints. */
+    private final XMLObjectChildrenList<DomainHint> domainHints;
+
+    /** IP Address hints. */
+    private final XMLObjectChildrenList<IPHint> iPHints;
+
+    /** GeoLocation hints. */
+    private final XMLObjectChildrenList<GeolocationHint> geoHints;
+
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI namespaceURI
+     * @param elementLocalName elementLocalName
+     * @param namespacePrefix namespacePrefix
+     */
+    protected DiscoHintsImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+        domainHints = new XMLObjectChildrenList<DomainHint>(this);
+        iPHints = new XMLObjectChildrenList<IPHint>(this);
+        geoHints = new XMLObjectChildrenList<GeolocationHint>(this);
+    }
+
+    /** {@inheritDoc} */
+    public List<DomainHint> getDomainHints() {
+        return domainHints;
+    }
+
+    /** {@inheritDoc} */
+    public List<GeolocationHint> getGeolocationHints() {
+        return geoHints;
+    }
+
+    /** {@inheritDoc} */
+    public List<IPHint> getIPHints() {
+        return iPHints;
+    }
+
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        ArrayList<XMLObject> children = new ArrayList<XMLObject>();
+
+        children.addAll(domainHints);
+        children.addAll(iPHints);
+        children.addAll(geoHints);
+        return children;
+    }
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLBuilder.java	(revision 1528)
@@ -0,0 +1,48 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.PrivacyStatementURL;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.PrivacyStatementURL} objects.
+ * @author Rod Widdowson
+ */
+public class PrivacyStatementURLBuilder extends AbstractSAMLObjectBuilder<PrivacyStatementURL> {
+
+    /**
+     * Constructor.
+     */
+    public PrivacyStatementURLBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public PrivacyStatementURL buildObject() {
+        return buildObject(UIInfo.MDUI_NS, 
+                           PrivacyStatementURL.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           UIInfo.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public PrivacyStatementURL buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new PrivacyStatementURLImpl(namespaceURI, localName, namespacePrefix);
+    }
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintBuilder.java	(revision 1528)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.DiscoHints;
+import org.opensaml.samlext.saml2mdui.GeolocationHint;
+
+/**
+ * Builder of {@link GeolocationHint} objects.
+ */
+public class GeolocationHintBuilder extends AbstractSAMLObjectBuilder<GeolocationHint> {
+
+    /**
+     * Constructor.
+     */
+    public GeolocationHintBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public GeolocationHint buildObject() {
+        return buildObject(DiscoHints.MDUI_NS, 
+                           GeolocationHint.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           DiscoHints.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public GeolocationHint buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new GeolocationHintImpl(namespaceURI, localName, namespacePrefix);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoBuilder.java	(revision 1528)
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.UIInfo}.
+ */
+public class UIInfoBuilder extends AbstractSAMLObjectBuilder<UIInfo> {
+
+    /**
+     * Constructor.
+     */
+    public UIInfoBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public UIInfo buildObject() {
+        return buildObject(UIInfo.MDUI_NS, UIInfo.DEFAULT_ELEMENT_LOCAL_NAME, UIInfo.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public UIInfo buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new UIInfoImpl(namespaceURI, localName, namespacePrefix);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLMarshaller.java	(revision 1528)
@@ -0,0 +1,24 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.PrivacyStatementURL} objects.
+ */
+public class PrivacyStatementURLMarshaller extends LocalizedURIMarshaller {
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintBuilder.java	(revision 1528)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.DiscoHints;
+import org.opensaml.samlext.saml2mdui.DomainHint;
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.DomainHint} objects.
+ */
+public class DomainHintBuilder extends AbstractSAMLObjectBuilder<DomainHint> {
+
+    /**
+     * Constructor.
+     */
+    public DomainHintBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public DomainHint buildObject() {
+        return buildObject(DiscoHints.MDUI_NS, 
+                           DomainHint.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           DiscoHints.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public DomainHint buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new DomainHintImpl(namespaceURI, localName, namespacePrefix);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionUnmarshaller.java	(revision 1528)
@@ -0,0 +1,25 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.Description} objects.
+ */
+public class DescriptionUnmarshaller extends LocalizedNameUnmarshaller {
+
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoMarshaller.java	(revision 1528)
@@ -0,0 +1,27 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.UIInfo} objects.
+ */
+public class UIInfoMarshaller extends AbstractSAMLObjectMarshaller {
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIUnmarshaller.java	(revision 1528)
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.LocalizedURI;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.UnmarshallingException;
+import org.w3c.dom.Attr;
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.LocalizedURI} objects.
+ */
+public class LocalizedURIUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    /**
+     * {@inheritDoc}
+     */
+    protected void processAttribute(XMLObject samlObject, Attr attribute) throws UnmarshallingException {
+        if (attribute.getLocalName().equals(LangBearing.XML_LANG_ATTR_LOCAL_NAME)
+                && SAMLConstants.XML_NS.equals(attribute.getNamespaceURI())) {
+            LocalizedURI uri = (LocalizedURI) samlObject;
+
+            LocalizedString uriStr = uri.getURI();
+            if (uriStr == null) {
+                uriStr = new LocalizedString();
+            }
+
+            uriStr.setLanguage(attribute.getValue());
+            uri.setURI(uriStr);
+        }
+    }
+
+    /** {@inheritDoc} */
+    protected void processElementContent(XMLObject samlObject, String elementContent) {
+        LocalizedURI uri = (LocalizedURI) samlObject;
+
+        LocalizedString uriStr = uri.getURI();
+        if (uriStr == null) {
+            uriStr = new LocalizedString();
+        }
+
+        uriStr.setLocalizedString(elementContent);
+        uri.setURI(uriStr);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedURIUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintUnmarshaller.java	(revision 1528)
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.samlext.saml2mdui.GeolocationHint;
+import org.opensaml.xml.XMLObject;
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.GeolocationHint} objects.
+ */
+public class GeolocationHintUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    /** {@inheritDoc} */
+    protected void processElementContent(XMLObject samlObject, String elementContent) {
+        GeolocationHint hint = (GeolocationHint) samlObject;
+
+        hint.setHint(elementContent);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/GeolocationHintUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoBuilder.java	(revision 1528)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.Logo;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.Logo} objects.
+ */
+public class LogoBuilder extends AbstractSAMLObjectBuilder<Logo> {
+
+    /**
+     * Constructor.
+     */
+    public LogoBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public Logo buildObject() {
+        return buildObject(UIInfo.MDUI_NS, 
+                           Logo.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           UIInfo.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public Logo buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new LogoImpl(namespaceURI, localName, namespacePrefix);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLImpl.java	(revision 1528)
@@ -0,0 +1,41 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.PrivacyStatementURL;
+
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.PrivacyStatementURL}.
+ * @author Rod Widdowson
+ */
+
+public class PrivacyStatementURLImpl extends LocalizedURIImpl implements PrivacyStatementURL {
+
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespaceURI
+     * @param elementLocalName the elementLocalName
+     * @param namespacePrefix the namespacePrefix
+     */
+    protected PrivacyStatementURLImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/PrivacyStatementURLImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintUnmarshaller.java	(revision 1528)
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.samlext.saml2mdui.DomainHint;
+import org.opensaml.xml.XMLObject;
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.DomainHint} objects.
+ */
+public class DomainHintUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    /** {@inheritDoc} */
+    protected void processElementContent(XMLObject samlObject, String elementContent) {
+        DomainHint hint = (DomainHint) samlObject;
+
+        hint.setHint(elementContent);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DomainHintUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintUnmarshaller.java	(revision 1528)
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.samlext.saml2mdui.IPHint;
+import org.opensaml.xml.XMLObject;
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.IPHint} objects.
+ */
+public class IPHintUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    /** {@inheritDoc} */
+    protected void processElementContent(XMLObject samlObject, String elementContent) {
+        IPHint hint = (IPHint) samlObject;
+
+        hint.setHint(elementContent);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/IPHintUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoImpl.java	(revision 1528)
@@ -0,0 +1,118 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.samlext.saml2mdui.Description;
+import org.opensaml.samlext.saml2mdui.DisplayName;
+import org.opensaml.samlext.saml2mdui.InformationURL;
+import org.opensaml.samlext.saml2mdui.Keywords;
+import org.opensaml.samlext.saml2mdui.Logo;
+import org.opensaml.samlext.saml2mdui.PrivacyStatementURL;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.util.XMLObjectChildrenList;
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.UIInfo}.
+ * @author Rod Widdowson
+ */
+public class UIInfoImpl extends AbstractSAMLObject implements UIInfo {
+    
+    /** localized descriptions. */
+    private final XMLObjectChildrenList<Description> descriptions;
+    
+    /** localized displayNames. */
+    private final XMLObjectChildrenList<DisplayName> displayNames;
+        
+    /** localized displayNames. */
+    private final XMLObjectChildrenList<Keywords> keywords;
+        
+    /** (posibly) localized Logos. */
+    private final XMLObjectChildrenList<Logo> logos;
+ 
+    /** localized Informational URLs. */
+    private final XMLObjectChildrenList<InformationURL> urls;
+ 
+    /** localized PrivacyStatementURLs. */
+    private final XMLObjectChildrenList<PrivacyStatementURL> privacyStatementURLs;
+ 
+    /**
+     * Constructor.
+     * @param namespaceURI namespaceURI
+     * @param elementLocalName elementLocalName
+     * @param namespacePrefix namespacePrefix
+     */
+    protected UIInfoImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+        
+        descriptions = new XMLObjectChildrenList<Description>(this);
+        displayNames = new XMLObjectChildrenList<DisplayName>(this);
+        logos = new XMLObjectChildrenList<Logo>(this);
+        urls = new XMLObjectChildrenList<InformationURL>(this);
+        keywords = new XMLObjectChildrenList<Keywords>(this);
+        privacyStatementURLs = new XMLObjectChildrenList<PrivacyStatementURL>(this);
+    }
+
+    
+    /** {@inheritDoc} */
+    public List<Description> getDescriptions() {
+        return descriptions;
+    }
+
+    /** {@inheritDoc} */
+    public List<DisplayName> getDisplayNames() {
+        return displayNames;
+    }
+
+    /** {@inheritDoc} */
+    public List<Keywords> getKeywords() {
+        return keywords;
+    }
+
+    /** {@inheritDoc} */
+    public List<InformationURL> getInformationURLs() {
+        return urls;
+    }
+
+    /** {@inheritDoc} */
+    public List<Logo> getLogos() {
+        return logos;
+    }
+
+    /** {@inheritDoc} */
+    public List<PrivacyStatementURL> getPrivacyStatementURLs() {
+        return privacyStatementURLs;
+    }
+
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        ArrayList<XMLObject> children = new ArrayList<XMLObject>();
+        
+        children.addAll(displayNames);
+        children.addAll(descriptions);
+        children.addAll(keywords);
+        children.addAll(urls);
+        children.addAll(logos);
+        children.addAll(privacyStatementURLs);
+        return children;
+    }
+
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/UIInfoImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameBuilder.java	(revision 1528)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.DisplayName;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.DisplayName} objects.
+ */
+public class DisplayNameBuilder extends AbstractSAMLObjectBuilder<DisplayName> {
+
+    /**
+     * Constructor.
+     */
+    public DisplayNameBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public DisplayName buildObject() {
+        return buildObject(UIInfo.MDUI_NS, 
+                           DisplayName.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           UIInfo.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public DisplayName buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new DisplayNameImpl(namespaceURI, localName, namespacePrefix);
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsBuilder.java	(revision 1528)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.Keywords;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.InformationURL} objects.
+ * @author Rod Widdowson
+ */
+public class KeywordsBuilder extends AbstractSAMLObjectBuilder<Keywords> {
+    /**
+     * Constructor.
+     */
+    public KeywordsBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public Keywords buildObject() {
+        return buildObject(UIInfo.MDUI_NS, 
+                           Keywords.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           UIInfo.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public Keywords buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new KeywordsImpl(namespaceURI, localName, namespacePrefix);
+    }
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoUnmarshaller.java	(revision 1528)
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.samlext.saml2mdui.Logo;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.UnmarshallingException;
+import org.w3c.dom.Attr;
+
+/**
+ * A thread-safe Unmarshaller for {@link org.opensaml.samlext.saml2mdui.Logo} objects.
+ */
+public class LogoUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    
+    /** {@inheritDoc} */
+    protected void processElementContent(XMLObject samlObject, String elementContent) {
+        Logo logo = (Logo) samlObject;
+
+        logo.setURL(elementContent);
+    }
+    
+    /**  {@inheritDoc} */
+    protected void processAttribute(XMLObject samlObject, Attr attribute) throws UnmarshallingException {
+        Logo logo = (Logo) samlObject;
+
+        if (attribute.getLocalName().equals(LangBearing.XML_LANG_ATTR_LOCAL_NAME)
+                && SAMLConstants.XML_NS.equals(attribute.getNamespaceURI())) {
+            logo.setXMLLang(attribute.getValue());
+        } else if (attribute.getLocalName().equals(Logo.HEIGHT_ATTR_NAME)) {
+            logo.setHeight(Integer.valueOf(attribute.getValue()));
+        } else if (attribute.getLocalName().equals(Logo.WIDTH_ATTR_NAME)) {
+            logo.setWidth(Integer.valueOf(attribute.getValue()));
+        }
+    }
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LogoUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsMarshaller.java	(revision 1528)
@@ -0,0 +1,61 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.samlext.saml2mdui.Keywords;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.MarshallingException;
+import org.opensaml.xml.util.XMLHelper;
+import org.w3c.dom.Attr;
+import org.w3c.dom.Element;
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.Keywords} objects.
+ */
+public class KeywordsMarshaller extends AbstractSAMLObjectMarshaller {
+
+    /**
+     * {@inheritDoc}
+     */
+    protected void marshallAttributes(XMLObject samlObject, Element domElement) throws MarshallingException {
+        Keywords words = (Keywords) samlObject;
+
+        if (words.getXMLLang() != null) {
+            Attr attribute = XMLHelper.constructAttribute(domElement.getOwnerDocument(), SAMLConstants.XML_NS,
+                    LangBearing.XML_LANG_ATTR_LOCAL_NAME, SAMLConstants.XML_PREFIX);
+            attribute.setValue(words.getXMLLang());
+            domElement.setAttributeNodeNS(attribute);
+        }
+    }
+
+    /** {@inheritDoc} */
+    protected void marshallElementContent(XMLObject samlObject, Element domElement) throws MarshallingException {
+        Keywords words = (Keywords) samlObject;
+
+        if (words.getKeywords() != null) {
+            StringBuilder sb = new StringBuilder();
+            for (String s : words.getKeywords()) {
+                sb.append(s);
+                sb.append(' ');
+            }
+            XMLHelper.appendTextContent(domElement, sb.toString());
+        }
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameMarshaller.java	(revision 1528)
@@ -0,0 +1,56 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectMarshaller;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.samlext.saml2mdui.LocalizedName;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.MarshallingException;
+import org.opensaml.xml.util.XMLHelper;
+import org.w3c.dom.Attr;
+import org.w3c.dom.Element;
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.LocalizedName} objects.
+ */
+public class LocalizedNameMarshaller extends AbstractSAMLObjectMarshaller {
+
+    /**
+     * {@inheritDoc}
+     */
+    protected void marshallAttributes(XMLObject samlObject, Element domElement) throws MarshallingException {
+        LocalizedName name = (LocalizedName) samlObject;
+
+        if (name.getName() != null) {
+            Attr attribute = XMLHelper.constructAttribute(domElement.getOwnerDocument(), SAMLConstants.XML_NS,
+                    LangBearing.XML_LANG_ATTR_LOCAL_NAME, SAMLConstants.XML_PREFIX);
+            attribute.setValue(name.getName().getLanguage());
+            domElement.setAttributeNodeNS(attribute);
+        }
+    }
+
+    /** {@inheritDoc} */
+    protected void marshallElementContent(XMLObject samlObject, Element domElement) throws MarshallingException {
+        LocalizedName name = (LocalizedName) samlObject;
+
+        if (name.getName() != null) {
+            XMLHelper.appendTextContent(domElement, name.getName().getLocalString());
+        }
+    }
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLMarshaller.java	(revision 1528)
@@ -0,0 +1,24 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.InformationURL} objects.
+ */
+public class InformationURLMarshaller extends LocalizedURIMarshaller {
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameUnmarshaller.java	(revision 1528)
@@ -0,0 +1,24 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+/**
+ * A thread-safe unmarshaller for {@link org.opensaml.samlext.saml2mdui.DisplayName} objects.
+ */
+public class DisplayNameUnmarshaller extends LocalizedNameUnmarshaller {
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DisplayNameUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsUnmarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsUnmarshaller.java	(revision 1528)
@@ -0,0 +1,48 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectUnmarshaller;
+import org.opensaml.samlext.saml2mdui.DiscoHints;
+import org.opensaml.samlext.saml2mdui.DomainHint;
+import org.opensaml.samlext.saml2mdui.GeolocationHint;
+import org.opensaml.samlext.saml2mdui.IPHint;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.io.UnmarshallingException;
+
+/**
+ * A thread-safe Unmarshaller for {@link org.opensaml.samlext.saml2mdui.DiscoHints} objects.
+ */
+public class DiscoHintsUnmarshaller extends AbstractSAMLObjectUnmarshaller {
+
+    /** {@inheritDoc} */
+    protected void processChildElement(XMLObject parentSAMLObject, XMLObject childSAMLObject)
+            throws UnmarshallingException {
+        DiscoHints info = (DiscoHints) parentSAMLObject;
+
+        if (childSAMLObject instanceof IPHint) {
+            info.getIPHints().add((IPHint) childSAMLObject);
+        } else if (childSAMLObject instanceof DomainHint) {
+            info.getDomainHints().add((DomainHint) childSAMLObject);
+        } else if (childSAMLObject instanceof GeolocationHint) {
+            info.getGeolocationHints().add((GeolocationHint) childSAMLObject);
+        } else {
+            super.processChildElement(parentSAMLObject, childSAMLObject);
+        }
+    }
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DiscoHintsUnmarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsImpl.java	(revision 1528)
@@ -0,0 +1,86 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.List;
+
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.samlext.saml2mdui.Keywords;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.util.DatatypeHelper;
+
+/**
+ * Concrete Implementation of  {@link org.opensaml.samlext.saml2mdui.Keywords}.
+ */
+public class KeywordsImpl extends AbstractSAMLObject implements Keywords {
+
+    /** The language. */
+    private String lang;
+    /** The data. */
+    private List<String> data;
+    /**
+     * Constructor.
+     *
+     * @param namespaceURI the URI
+     * @param elementLocalName the local name
+     * @param namespacePrefix the prefix
+     */
+    protected KeywordsImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+   
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        return null;
+    }
+
+    /** {@inheritDoc} */
+    public String getXMLLang() {
+        return lang;
+    }
+
+    /** {@inheritDoc} */
+    public void setXMLLang(String newLang) {
+        boolean hasValue = newLang != null && !DatatypeHelper.isEmpty(newLang);
+        lang = prepareForAssignment(lang, newLang);
+        manageQualifiedAttributeNamespace(LangBearing.XML_LANG_ATTR_NAME, hasValue);
+    }
+
+    /** {@inheritDoc} */
+    public List<String> getKeywords() {
+        return data;
+    }
+
+    /** {@inheritDoc} */
+    public void setKeywords(List<String> val) {
+        data = prepareForAssignment(data, val);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public int hashCode() {
+        int hash = lang.hashCode();
+        for (String s: data) {
+            hash = hash * 31 + s.hashCode();
+        }
+        return hash; 
+    }
+
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/KeywordsImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameImpl.java	(revision 1528)
@@ -0,0 +1,76 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.opensaml.samlext.saml2mdui.impl;
+
+import java.util.List;
+
+import org.opensaml.common.impl.AbstractSAMLObject;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.samlext.saml2mdui.LocalizedName;
+import org.opensaml.xml.LangBearing;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.util.DatatypeHelper;
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.LocalizedName}.
+ */
+public class LocalizedNameImpl extends AbstractSAMLObject implements LocalizedName {
+
+    /** Display name. */
+    private LocalizedString name;
+
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespaceURI
+     * @param elementLocalName the elementLocalName
+     * @param namespacePrefix the namespacePrefix
+     */
+    protected LocalizedNameImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+    /** {@inheritDoc} */
+    public LocalizedString getName() {
+        return name;
+    }
+
+    /** {@inheritDoc} */
+    public void setName(LocalizedString newName) {
+        name = prepareForAssignment(name, newName);
+        boolean hasXMLLang = false;
+        if (name != null && !DatatypeHelper.isEmpty(name.getLanguage())) {
+            hasXMLLang = true;
+        }
+        manageQualifiedAttributeNamespace(LangBearing.XML_LANG_ATTR_NAME, hasXMLLang);
+    }
+
+    /** {@inheritDoc} */
+    public String getXMLLang() {
+        return name.getLanguage();
+    }
+
+    /** {@inheritDoc} */
+    public void setXMLLang(String newLang) {
+        name.setLanguage(newLang);
+    }
+
+    /** {@inheritDoc} */
+    public List<XMLObject> getOrderedChildren() {
+        return null;
+    }
+
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/LocalizedNameImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLImpl.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLImpl.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLImpl.java	(revision 1528)
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.samlext.saml2mdui.InformationURL;
+
+/**
+ * Concrete implementation of {@link org.opensaml.samlext.saml2mdui.InformationURL}.
+ * @author Rod Widdowson
+ */
+
+public class InformationURLImpl extends LocalizedURIImpl implements InformationURL {
+
+    /**
+     * Constructor.
+     * 
+     * @param namespaceURI the namespaceURI
+     * @param elementLocalName the elementLocalName
+     * @param namespacePrefix the namespacePrefix
+     */
+    protected InformationURLImpl(String namespaceURI, String elementLocalName, String namespacePrefix) {
+        super(namespaceURI, elementLocalName, namespacePrefix);
+    }
+
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/InformationURLImpl.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionBuilder.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionBuilder.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionBuilder.java	(revision 1528)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+import org.opensaml.common.impl.AbstractSAMLObjectBuilder;
+import org.opensaml.samlext.saml2mdui.Description;
+import org.opensaml.samlext.saml2mdui.UIInfo;
+
+/**
+ * Builder of {@link org.opensaml.samlext.saml2mdui.Description} objects.
+ * @author Rod Widdowson
+ */
+public class DescriptionBuilder extends AbstractSAMLObjectBuilder<Description> {
+    /**
+     * Constructor.
+     */
+    public DescriptionBuilder() {
+
+    }
+
+    /** {@inheritDoc} */
+    public Description buildObject() {
+        return buildObject(UIInfo.MDUI_NS, 
+                           Description.DEFAULT_ELEMENT_LOCAL_NAME, 
+                           UIInfo.MDUI_PREFIX);
+    }
+
+    /** {@inheritDoc} */
+    public Description buildObject(String namespaceURI, String localName, String namespacePrefix) {
+        return new DescriptionImpl(namespaceURI, localName, namespacePrefix);
+    }
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionBuilder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionMarshaller.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionMarshaller.java	(revision 1528)
@@ -0,0 +1,25 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui.impl;
+
+
+/**
+ * A thread safe Marshaller for {@link org.opensaml.samlext.saml2mdui.Description} objects.
+ */
+public class DescriptionMarshaller extends LocalizedNameMarshaller {
+
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/impl/DescriptionMarshaller.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/Description.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/Description.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/Description.java	(revision 1528)
@@ -0,0 +1,55 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.saml2.metadata.LocalizedString;
+
+/**
+ * DisplayName.
+ *
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *
+ * @author Rod Widdowson August 2010
+ * 
+ * Reflects the Description in the IdP Discovery and Login UI Metadata Extension Profile.
+ * 
+ */
+public interface Description extends LocalizedName {
+
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "Description";
+    
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(UIInfo.MDUI_NS, 
+            DEFAULT_ELEMENT_LOCAL_NAME, UIInfo.MDUI_PREFIX);
+    
+    /**
+     * Gets the description of the EndPoint.
+     * 
+     * @return the description of the EndPoint
+     */
+    public LocalizedString getDescription();
+    
+    /**
+     * Sets the description of the EndPoint.
+     * 
+     * @param newDescription description of the EndPoint
+     */
+    public void setDescription(LocalizedString newDescription);
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/Description.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/PrivacyStatementURL.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/PrivacyStatementURL.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/PrivacyStatementURL.java	(revision 1528)
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.saml2.metadata.LocalizedString;
+
+/**
+ * PrivacyStatementURL.
+ *
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *
+ * @author Rod Widdowson August 2010
+ * 
+ * Reflects the PrivacyStatementURL in the IdP Discovery and Login UI Metadata Extension Profile.
+ * 
+ */
+public interface PrivacyStatementURL extends LocalizedURI {
+    
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "PrivacyStatementURL";
+    
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(UIInfo.MDUI_NS, 
+            DEFAULT_ELEMENT_LOCAL_NAME, UIInfo.MDUI_PREFIX);
+    
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/PrivacyStatementURL.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/DisplayName.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/DisplayName.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/DisplayName.java	(revision 1528)
@@ -0,0 +1,54 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.saml2.metadata.LocalizedString;
+
+/**
+ * DisplayName.
+ *
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *
+ * @author Rod Widdowson August 2010
+ * 
+ * Reflects the UINFO in the IdP Discovery and Login UI Metadata Extension Profile/
+ * */
+public interface DisplayName extends LocalizedName {
+
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "DisplayName";
+    
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(UIInfo.MDUI_NS, 
+            DEFAULT_ELEMENT_LOCAL_NAME, UIInfo.MDUI_PREFIX);
+    
+    /**
+     * Gets the name of the EndPoint.
+     * 
+     * @return the name of the EndPoint
+     *
+    public LocalizedString getName();
+    
+    /**
+     * Sets the EndPoint name.
+     * 
+     * @param newName EndPoint name
+     *
+    public void setName(LocalizedString newName);*/
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/DisplayName.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/GeolocationHint.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/GeolocationHint.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/GeolocationHint.java	(revision 1528)
@@ -0,0 +1,56 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.SAMLObject;
+
+/**
+ * IPHint.
+ *
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *
+ * @author Rod Widdowson August 2010
+ * 
+ * The <GeolocationHint> element specifies the geographic coordinates associated 
+ *  with, or serviced by, the entity.  Coordinates are given in decimal form using
+ *  the World Geodetic System (2d) coordinate system.
+ */
+public interface GeolocationHint extends SAMLObject {
+
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "GeolocationHint";
+    
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(DiscoHints.MDUI_NS, 
+            DEFAULT_ELEMENT_LOCAL_NAME, DiscoHints.MDUI_PREFIX);
+    
+    /**
+     * Gets the Hint.
+     * 
+     * @return the Hint
+     */
+    public String getHint();
+    
+    /**
+     * Sets the hint.
+     * 
+     * @param newHint hint
+     */
+    public void setHint(String newHint);
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/GeolocationHint.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/LocalizedURI.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/LocalizedURI.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/LocalizedURI.java	(revision 1528)
@@ -0,0 +1,44 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import org.opensaml.common.SAMLObject;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.xml.LangBearing;
+
+/**
+ * LocalizedURI.
+ */
+public interface LocalizedURI extends SAMLObject, LangBearing {
+
+    /** Local name of the XSI type. */
+    public static final String TYPE_LOCAL_NAME = "localizedURIType"; 
+        
+    /**
+     * Gets the URI.
+     * 
+     * @return the URI
+     */
+    public LocalizedString getURI();
+    
+    /**
+     * Sets the URI.
+     * 
+     * @param newURI the new value
+     */
+    public void setURI(LocalizedString newURI);
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/LocalizedURI.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/DiscoHints.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/DiscoHints.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/DiscoHints.java	(revision 1528)
@@ -0,0 +1,68 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import java.util.List;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.SAMLObject;
+
+/**
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ * 
+ * @author RDW 27/Aug/2010
+ * 
+ * Reflects the DiscoHints 
+ */
+public interface DiscoHints extends SAMLObject {
+    /** Namespace for Discovery Service metadata extensions. */
+    public static final String MDUI_NS = "urn:oasis:names:tc:SAML:metadata:ui";
+
+    /** Default namespace prefix used by this library. */
+    public static final String  MDUI_PREFIX = "mdui";
+
+    /** Name of the element inside the Extensions. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "DiscoHints";
+
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(MDUI_NS, DEFAULT_ELEMENT_LOCAL_NAME,
+            MDUI_PREFIX);
+    
+    /** 
+     * The <IPHint> element specifies a set of [CIDR] blocks associated with, 
+     *  or serviced by, the entity.  Both IPv4 and IPv6 CIDR blocks MUST be supported.
+     * 
+     * @return hints
+     */
+    public List <IPHint> getIPHints();
+    
+    /** The <DomainHint> element specifies a set of DNS domains associated with, 
+     * or serviced by, the entity.
+     * @return hints.
+     */
+    public List <DomainHint> getDomainHints();
+    
+    /** The <GeolocationHint> element specifies the geographic coordinates associated 
+     *  with, or serviced by, the entity.  Coordinates are given in decimal form using
+     *  the World Geodetic System (2d) coordinate system.
+     * 
+     * @return hints
+     */
+    public List <GeolocationHint> getGeolocationHints();
+    
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/DiscoHints.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/Keywords.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/Keywords.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/Keywords.java	(revision 1528)
@@ -0,0 +1,59 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import java.util.List;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.SAMLObject;
+import org.opensaml.xml.LangBearing;
+
+/**
+ * DisplayName.
+ *
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *
+ * @author Rod Widdowson August 2010
+ * 
+ * Reflects the Description in the IdP Discovery and Login UI Metadata Extension Profile.
+ * 
+ */
+public interface Keywords extends SAMLObject, LangBearing  {
+
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "Keywords";
+    
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(UIInfo.MDUI_NS, 
+            DEFAULT_ELEMENT_LOCAL_NAME, UIInfo.MDUI_PREFIX);
+    
+    /**
+     * Gets the keywords.
+     * 
+     * @return the keywords
+     */
+    public List<String> getKeywords();
+    
+    /**
+     * Sets the keywords.
+     * 
+     * @param val The keywords
+     */
+    public void setKeywords(List<String> val);
+   
+}
\ No newline at end of file

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/Keywords.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/LocalizedName.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/LocalizedName.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/LocalizedName.java	(revision 1528)
@@ -0,0 +1,44 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import org.opensaml.common.SAMLObject;
+import org.opensaml.saml2.metadata.LocalizedString;
+import org.opensaml.xml.LangBearing;
+
+/**
+ * LocalizedName.
+ */
+public interface LocalizedName extends SAMLObject, LangBearing {
+
+    /** Local name of the XSI type. */
+    public static final String TYPE_LOCAL_NAME = "localizedNameType"; 
+        
+    /**
+     * Gets the name.
+     * 
+     * @return the name
+     */
+    public LocalizedString getName();
+    
+    /**
+     * Sets the  name.
+     * 
+     * @param newName new name
+     */
+    public void setName(LocalizedString newName);
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/LocalizedName.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/InformationURL.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/InformationURL.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/InformationURL.java	(revision 1528)
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.saml2.metadata.LocalizedString;
+
+/**
+ * InformationURL.
+ *
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *
+ * @author Rod Widdowson August 2010
+ * 
+ * Reflects the InformationURL in the IdP Discovery and Login UI Metadata Extension Profile.
+ * 
+ */
+public interface InformationURL extends LocalizedURI {
+
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "InformationURL";
+    
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(DiscoHints.MDUI_NS, 
+            DEFAULT_ELEMENT_LOCAL_NAME, DiscoHints.MDUI_PREFIX);
+    
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/InformationURL.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/UIInfo.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/UIInfo.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/UIInfo.java	(revision 1528)
@@ -0,0 +1,108 @@
+/*
+ * Copyright 2010 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import java.util.List;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.SAMLObject;
+
+/**
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *
+ * @author Rod Widdowson August 2010
+ * 
+ * Reflects the UINFO in the IdP Discovery and Login UI Metadata Extension Profile,
+ *
+ */
+public interface UIInfo extends SAMLObject {
+    /** Namespace for Discovery Service metadata extensions. */
+    public static final String MDUI_NS = "urn:oasis:names:tc:SAML:metadata:ui";
+
+    /** Default namespace prefix used by this library. */
+    public static final String  MDUI_PREFIX = "mdui";
+
+    /** Name of the element inside the Extensions. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "UIInfo";
+
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(MDUI_NS, DEFAULT_ELEMENT_LOCAL_NAME,
+            MDUI_PREFIX);
+    
+    /** Language attribute name. */
+    public static final String LANG_ATTRIB_NAME = "lang";
+    
+    /** 
+     * Get the Display Names
+     * 
+     * The <DisplayName> element specifies a set of localized names fit for 
+     * display to users.  Such names are meant to allow a user to distinguish 
+     * and identify the entity acting in a particular role.
+     * @return the names
+     */
+    public List <DisplayName> getDisplayNames();
+    
+    /** Get the Keywords. */
+    public List <Keywords> getKeywords();
+    
+    /**
+     * Return the descriptions.
+     * 
+     * The <Description> element specifies a set of brief, localized descriptions 
+     * fit for display to users. In the case of service providers this SHOULD be a 
+     * description of the service being offered.  In the case of an identity provider 
+     * this SHOULD be a description of the community serviced.  In all cases this text 
+     * SHOULD be standalone, meaning it is not meant to be filled in to some template 
+     * text (e.g. 'This service offers $description').
+     * @return descriptions
+     */
+    public List <Description> getDescriptions();
+    
+    /** 
+     * Get the logos.
+     * 
+     * The <Logo> element specifies a set of localized logos fit for display to users.
+     *  
+     * @return a list of logos
+     */
+    public List <Logo> getLogos();
+    
+    /** 
+     * Get the URLs.
+     * 
+     * The <InformationURL> specifies URLs to localized information, about the entity 
+     * acting in a given role, meant to be viewed by users.  The contents found at 
+     * these URLs SHOULD give a more complete set of information about than what is 
+     * provided by the <Description> element 
+     * 
+     * @return the URLs
+     */
+    public List <InformationURL> getInformationURLs();
+    
+    /**
+     * Get the Privacy Statement URLs.
+     * 
+     * The <PrivacyStatementURL> specifies URLs to localized privacy statements.  
+     * Such statements are meant to provide a user with information about how 
+     * information will be used and managed by the entity
+     * 
+     * @return the URLs
+     */
+    public List <PrivacyStatementURL> getPrivacyStatementURLs(); 
+
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/UIInfo.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/DomainHint.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/DomainHint.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/DomainHint.java	(revision 1528)
@@ -0,0 +1,55 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.SAMLObject;
+
+/**
+ * IPHint.
+ *
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *
+ * @author Rod Widdowson August 2010
+ * 
+ * The <DomainHint> element specifies a set of DNS domains associated with, 
+ * or serviced by, the entity. 
+ */
+public interface DomainHint extends SAMLObject {
+
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "DomainHint";
+    
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(DiscoHints.MDUI_NS, 
+            DEFAULT_ELEMENT_LOCAL_NAME, DiscoHints.MDUI_PREFIX);
+    
+    /**
+     * Gets the Hint.
+     * 
+     * @return the Hint
+     */
+    public String getHint();
+    
+    /**
+     * Sets the hint.
+     * 
+     * @param newHint hint
+     */
+    public void setHint(String newHint);
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/DomainHint.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/saml2mdui/IPHint.java
===================================================================
--- src/main/java/org/opensaml/samlext/saml2mdui/IPHint.java	(revision 0)
+++ src/main/java/org/opensaml/samlext/saml2mdui/IPHint.java	(revision 1528)
@@ -0,0 +1,55 @@
+/*
+ * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.samlext.saml2mdui;
+
+import javax.xml.namespace.QName;
+
+import org.opensaml.common.SAMLObject;
+
+/**
+ * IPHint.
+ *
+ * See IdP Discovery and Login UI Metadata Extension Profile.
+ *
+ * @author Rod Widdowson August 2010
+ * 
+ * The <IPHint> element specifies a set of [CIDR] blocks associated with, 
+ *  or serviced by, the entity.  Both IPv4 and IPv6 CIDR blocks MUST be supported.
+ */
+public interface IPHint extends SAMLObject {
+
+    /** Element local name. */
+    public static final String DEFAULT_ELEMENT_LOCAL_NAME = "IPHint";
+    
+    /** Default element name. */
+    public static final QName DEFAULT_ELEMENT_NAME = new QName(DiscoHints.MDUI_NS, 
+            DEFAULT_ELEMENT_LOCAL_NAME, DiscoHints.MDUI_PREFIX);
+    
+    /**
+     * Gets the Hint.
+     * 
+     * @return the Hint
+     */
+    public String getHint();
+    
+    /**
+     * Sets the hint.
+     * 
+     * @param newHint hint
+     */
+    public void setHint(String newHint);
+}

Property changes on: src/main/java/org/opensaml/samlext/saml2mdui/IPHint.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/samlext/idpdisco/DiscoveryResponseMarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/idpdisco/DiscoveryResponseMarshaller.java	(revision 1501)
+++ src/main/java/org/opensaml/samlext/idpdisco/DiscoveryResponseMarshaller.java	(revision 1528)
@@ -18,7 +18,7 @@
 
 import org.opensaml.saml2.metadata.impl.IndexedEndpointMarshaller;
 
-/** A thread-safe Marshaller for {@link org.opensaml.samlext.samlidpdisco.DiscoveryRespons} objects. */
+/** A thread-safe Marshaller for {@link org.opensaml.samlext.idpdisco.DiscoveryResponse} objects. */
 public class DiscoveryResponseMarshaller extends IndexedEndpointMarshaller {
 
 }
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/idpdisco/DiscoveryResponseUnmarshaller.java
===================================================================
--- src/main/java/org/opensaml/samlext/idpdisco/DiscoveryResponseUnmarshaller.java	(revision 1501)
+++ src/main/java/org/opensaml/samlext/idpdisco/DiscoveryResponseUnmarshaller.java	(revision 1528)
@@ -18,7 +18,7 @@
 
 import org.opensaml.saml2.metadata.impl.IndexedEndpointUnmarshaller;
 
-/** A thread-safe Unmarshaller for {@link org.opensaml.samlext.samlidpdisco.DiscoveryRespons} objects. */
+/** A thread-safe Unmarshaller for {@link org.opensaml.samlext.idpdisco.DiscoveryResponse} objects. */
 public class DiscoveryResponseUnmarshaller extends IndexedEndpointUnmarshaller {
 
 }
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/saml1md/impl/package.html
===================================================================
--- src/main/java/org/opensaml/samlext/saml1md/impl/package.html	(revision 1501)
+++ src/main/java/org/opensaml/samlext/saml1md/impl/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Implementation of SAML 1 metadata profile objects.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/samlext/saml1md/package.html
===================================================================
--- src/main/java/org/opensaml/samlext/saml1md/package.html	(revision 1501)
+++ src/main/java/org/opensaml/samlext/saml1md/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Interfaces for SAML 1 metadata profile.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/metadata/validator/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/metadata/validator/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/metadata/validator/package.html	(revision 1528)
@@ -6,10 +6,10 @@
 the objects adhere to the additional constraints placed upon the object by the SAML 2.0 metadata specification.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/metadata/provider/EntityRoleFilter.java
===================================================================
--- src/main/java/org/opensaml/saml2/metadata/provider/EntityRoleFilter.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/metadata/provider/EntityRoleFilter.java	(revision 1528)
@@ -72,6 +72,7 @@
         if (keptRoles != null) {
             roleWhiteList.addAll(keptRoles);
         }
+        roleWhiteList = Collections.unmodifiableList(roleWhiteList);
 
         removeRolelessEntityDescriptors = true;
         removeEmptyEntitiesDescriptors = true;
@@ -83,7 +84,7 @@
      * @return unmodifiable list of roles that are NOT removed by this filter
      */
     public List<QName> getRoleWhiteList() {
-        return Collections.unmodifiableList(roleWhiteList);
+        return roleWhiteList;
     }
 
     /**
Index: src/main/java/org/opensaml/saml2/metadata/provider/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/metadata/provider/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/metadata/provider/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Class for retrieving, filtering, and querying metadata.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/metadata/provider/AbstractMetadataProvider.java
===================================================================
--- src/main/java/org/opensaml/saml2/metadata/provider/AbstractMetadataProvider.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/metadata/provider/AbstractMetadataProvider.java	(revision 1528)
@@ -20,9 +20,10 @@
 import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 
 import javax.xml.namespace.QName;
 
@@ -56,7 +57,7 @@
     private boolean failFastInitialization;
 
     /** Cache of entity IDs to their descriptors. */
-    private HashMap<String, EntityDescriptor> indexedDescriptors;
+    private Map<String, EntityDescriptor> indexedDescriptors;
 
     /** Pool of parsers used to process XML. */
     private ParserPool parser;
@@ -64,7 +65,7 @@
     /** Constructor. */
     public AbstractMetadataProvider() {
         super();
-        indexedDescriptors = new HashMap<String, EntityDescriptor>();
+        indexedDescriptors = new ConcurrentHashMap<String, EntityDescriptor>();
         failFastInitialization = true;
         initialized = false;
     }
@@ -113,9 +114,8 @@
         EntitiesDescriptor descriptor = doGetEntitiesDescriptor(name);
         if (descriptor == null) {
             log.debug("Metadata document does not contain an EntitiesDescriptor with the name {}", name);
-        }
-
-        if (!isValid(descriptor)) {
+            return null;
+        } else if (!isValid(descriptor)) {
             log.debug("Metadata document contained an EntitiesDescriptor with the name {}, but it was no longer valid",
                     name);
             return null;
@@ -164,9 +164,8 @@
         EntityDescriptor descriptor = doGetEntityDescriptor(entityID);
         if (descriptor == null) {
             log.debug("Metadata document does not contain an EntityDescriptor with the ID {}", entityID);
-        }
-
-        if (!isValid(descriptor)) {
+            return null;
+        } else if (!isValid(descriptor)) {
             log.debug("Metadata document contained an EntityDescriptor with the ID {}, but it was no longer valid",
                     entityID);
             return null;
@@ -214,21 +213,21 @@
 
         List<RoleDescriptor> roleDescriptors = doGetRole(entityID, roleName);
         if (roleDescriptors == null || roleDescriptors.isEmpty()) {
-            log.debug("Entity descriptor {} did not contain any {} roles", entityID, roleDescriptors);
+            log.debug("Entity descriptor {} did not contain any {} roles", entityID, roleName);
             return null;
         }
 
         Iterator<RoleDescriptor> roleDescItr = roleDescriptors.iterator();
         while (roleDescItr.hasNext()) {
             if (!isValid(roleDescItr.next())) {
-                log.debug("Metadata document contained a role of type {} for entity {}, but it was invalid", entityID,
-                        roleName);
+                log.debug("Metadata document contained a role of type {} for entity {}, but it was invalid", roleName,
+                        entityID);
                 roleDescItr.remove();
             }
         }
 
         if (roleDescriptors.isEmpty()) {
-            log.debug("Entity descriptor {} did not contain any valid {} roles", entityID, roleDescriptors);
+            log.debug("Entity descriptor {} did not contain any valid {} roles", entityID, roleName);
         }
         return roleDescriptors;
     }
Index: src/main/java/org/opensaml/saml2/metadata/provider/AbstractObservableMetadataProvider.java
===================================================================
--- src/main/java/org/opensaml/saml2/metadata/provider/AbstractObservableMetadataProvider.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/metadata/provider/AbstractObservableMetadataProvider.java	(revision 1528)
@@ -16,8 +16,8 @@
 
 package org.opensaml.saml2.metadata.provider;
 
-import java.util.ArrayList;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 /**
  * An observable base implementation of metadata providers. An observer that clears the descriptor index kept by
@@ -27,12 +27,12 @@
         ObservableMetadataProvider {
 
     /** List of registered observers. */
-    private ArrayList<Observer> observers;
+    private List<Observer> observers;
 
     /** Constructor. */
     public AbstractObservableMetadataProvider() {
         super();
-        observers = new ArrayList<Observer>();
+        observers = new CopyOnWriteArrayList<Observer>();
         observers.add(new DescriptorIndexClearingObserver());
     }
 
Index: src/main/java/org/opensaml/saml2/metadata/provider/MetadataFilterChain.java
===================================================================
--- src/main/java/org/opensaml/saml2/metadata/provider/MetadataFilterChain.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/metadata/provider/MetadataFilterChain.java	(revision 1528)
@@ -17,6 +17,7 @@
 package org.opensaml.saml2.metadata.provider;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 
 import org.opensaml.xml.XMLObject;
@@ -33,13 +34,13 @@
     private Logger log = LoggerFactory.getLogger(MetadataFilterChain.class);
 
     /** Registered filters. */
-    private ArrayList<MetadataFilter> filters;
+    private List<MetadataFilter> filters;
 
     /**
      * Constructor.
      */
     public MetadataFilterChain() {
-        filters = new ArrayList<MetadataFilter>();
+        filters = Collections.emptyList();
     }
 
     /** {@inheritDoc} */
@@ -70,10 +71,17 @@
      * @param newFilters list of {@link MetadataFilter}s that make up this chain
      */
     public void setFilters(List<MetadataFilter> newFilters) {
-        filters.clear();
+        if (newFilters == null || newFilters.isEmpty()) {
+            filters.clear();
+        }
 
-        if (newFilters != null) {
-            filters.addAll(newFilters);
+        ArrayList<MetadataFilter> checkedFilters = new ArrayList<MetadataFilter>();
+        for (MetadataFilter filter : newFilters) {
+            if (filter != null) {
+                checkedFilters.add(filter);
+            }
         }
+
+        filters = checkedFilters;
     }
 }
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/metadata/provider/ChainingMetadataProvider.java
===================================================================
--- src/main/java/org/opensaml/saml2/metadata/provider/ChainingMetadataProvider.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/metadata/provider/ChainingMetadataProvider.java	(revision 1528)
@@ -20,6 +20,7 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.Set;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReadWriteLock;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
@@ -61,10 +62,10 @@
     private final Logger log = LoggerFactory.getLogger(ChainingMetadataProvider.class);
 
     /** List of registered observers. */
-    private ArrayList<Observer> observers;
+    private List<Observer> observers;
 
     /** Registered providers. */
-    private ArrayList<MetadataProvider> providers;
+    private List<MetadataProvider> providers;
 
     /** Lock used to block reads during write and vice versa. */
     private ReadWriteLock providerLock;
@@ -72,8 +73,8 @@
     /** Constructor. */
     public ChainingMetadataProvider() {
         super();
-        observers = new ArrayList<Observer>();
-        providers = new ArrayList<MetadataProvider>();
+        observers = new CopyOnWriteArrayList<Observer>();
+        providers = Collections.EMPTY_LIST;
         providerLock = new ReentrantReadWriteLock(true);
     }
 
@@ -83,7 +84,7 @@
      * @return list of currently registered providers
      */
     public List<MetadataProvider> getProviders() {
-        return Collections.unmodifiableList(providers);
+        return providers;
     }
 
     /**
@@ -94,9 +95,22 @@
      * @throws MetadataProviderException thrown if there is a problem adding the metadata provider
      */
     public void setProviders(List<MetadataProvider> newProviders) throws MetadataProviderException {
-        providers.clear();
-        for (MetadataProvider provider : newProviders) {
-            addMetadataProvider(provider);
+        Lock writeLock = providerLock.writeLock();
+        writeLock.lock();
+
+        try {
+            if (newProviders == null || newProviders.isEmpty()) {
+                providers.clear();
+                return;
+            }
+
+            ArrayList<MetadataProvider> checkedProviders = new ArrayList<MetadataProvider>();
+            for (MetadataProvider provider : newProviders) {
+                doAddMetadataProvider(provider, checkedProviders);
+            }
+            providers = Collections.unmodifiableList(checkedProviders);
+        } finally {
+            writeLock.unlock();
         }
     }
 
@@ -108,14 +122,36 @@
      * @throws MetadataProviderException thrown if there is a problem adding the metadata provider
      */
     public void addMetadataProvider(MetadataProvider newProvider) throws MetadataProviderException {
-        if (newProvider != null) {
-            newProvider.setRequireValidMetadata(requireValidMetadata());
+        Lock writeLock = providerLock.writeLock();
+        writeLock.lock();
 
-            if (newProvider instanceof ObservableMetadataProvider) {
-                ((ObservableMetadataProvider) newProvider).getObservers().add(new ContainedProviderObserver());
+        try {
+            ArrayList<MetadataProvider> checkedProviders = new ArrayList<MetadataProvider>(providers);
+            doAddMetadataProvider(newProvider, checkedProviders);
+            providers = Collections.unmodifiableList(checkedProviders);
+        } finally {
+            writeLock.unlock();
+        }
+    }
+
+    /**
+     * Adds a metadata provider to the given collection. The new provider is checked to see if it is null, if not the
+     * providers {@link MetadataProvider#requireValidMetadata()} property is set to the value of this metadata
+     * provider's property. If the given metadata provider is an instance of {@link ObservableMetadataProvider} then a
+     * ContainedProviderObserver is added to it as well.
+     * 
+     * @param provider provider to be added to the collection
+     * @param providerList collection to which the provider is added
+     */
+    protected void doAddMetadataProvider(MetadataProvider provider, List<MetadataProvider> providerList) {
+        if (provider != null) {
+            provider.setRequireValidMetadata(requireValidMetadata());
+
+            if (provider instanceof ObservableMetadataProvider) {
+                ((ObservableMetadataProvider) provider).getObservers().add(new ContainedProviderObserver());
             }
 
-            providers.add(newProvider);
+            providerList.add(provider);
         }
     }
 
@@ -125,8 +161,22 @@
      * @param provider provider to be removed
      */
     public void removeMetadataProvider(MetadataProvider provider) {
-        // TODO we should remove the ContainedProviderObserver from the member's observer list
-        providers.remove(provider);
+        Lock writeLock = providerLock.writeLock();
+        writeLock.lock();
+
+        ObservableMetadataProvider observableProvider;
+        try {
+            if (providers.remove(provider) && provider instanceof ObservableMetadataProvider) {
+                observableProvider = (ObservableMetadataProvider) provider;
+                for (Observer observer : observableProvider.getObservers()) {
+                    if (observer instanceof ContainedProviderObserver) {
+                        observableProvider.getObservers().remove(observer);
+                    }
+                }
+            }
+        } finally {
+            writeLock.unlock();
+        }
     }
 
     /** {@inheritDoc} */
@@ -135,10 +185,13 @@
 
         Lock writeLock = providerLock.writeLock();
         writeLock.lock();
-        for (MetadataProvider provider : providers) {
-            provider.setRequireValidMetadata(requireValidMetadata);
+        try {
+            for (MetadataProvider provider : providers) {
+                provider.setRequireValidMetadata(requireValidMetadata);
+            }
+        } finally {
+            writeLock.unlock();
         }
-        writeLock.unlock();
     }
 
     /** {@inheritDoc} */
@@ -149,7 +202,7 @@
 
     /** {@inheritDoc} */
     public void setMetadataFilter(MetadataFilter newFilter) throws MetadataProviderException {
-        throw new UnsupportedOperationException("Metadata filter is not allowed on ChainingMetadataProvider");
+        throw new UnsupportedOperationException("Metadata filters are not supported on ChainingMetadataProviders");
     }
 
     /**
@@ -425,7 +478,7 @@
         public IDIndex getIDIndex() {
             return null;
         }
-        
+
         /** {@inheritDoc} */
         public NamespaceManager getNamespaceManager() {
             return null;
Index: src/main/java/org/opensaml/saml2/metadata/impl/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/metadata/impl/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/metadata/impl/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/metadata/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/metadata/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/metadata/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/common/impl/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/common/impl/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/common/impl/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/common/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/common/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/common/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/core/validator/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/core/validator/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/core/validator/package.html	(revision 1528)
@@ -6,10 +6,10 @@
 the objects adhere to the additional constraints placed upon the object by the SAML 2.0 core specification.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/core/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/core/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/core/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/core/impl/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/core/impl/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/core/impl/package.html	(revision 1528)
@@ -5,10 +5,10 @@
 
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/core/AuthnContext.java
===================================================================
--- src/main/java/org/opensaml/saml2/core/AuthnContext.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/core/AuthnContext.java	(revision 1528)
@@ -158,7 +158,7 @@
     public void setAuthnContextDeclRef(AuthnContextDeclRef newAuthnContextDeclRef);
 
     /**
-     * Gets the Authenticating Athorities of this Authentication Context.
+     * Gets the Authenticating Authorities of this Authentication Context.
      * 
      * @return AuthnContext AuthenticatingAuthorities
      */
Index: src/main/java/org/opensaml/saml2/binding/encoding/HTTPPostSimpleSignEncoder.java
===================================================================
--- src/main/java/org/opensaml/saml2/binding/encoding/HTTPPostSimpleSignEncoder.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/binding/encoding/HTTPPostSimpleSignEncoder.java	(revision 1528)
@@ -23,7 +23,6 @@
 import org.opensaml.common.binding.SAMLMessageContext;
 import org.opensaml.common.xml.SAMLConstants;
 import org.opensaml.ws.message.encoder.MessageEncodingException;
-import org.opensaml.ws.transport.http.HTTPTransportUtils;
 import org.opensaml.xml.Configuration;
 import org.opensaml.xml.io.Marshaller;
 import org.opensaml.xml.io.MarshallingException;
@@ -115,7 +114,7 @@
         String sigAlgURI = getSignatureAlgorithmURI(signingCredential, null);
         velocityContext.put("SigAlg", sigAlgURI);
 
-        String formControlData = buildFormDataToSign(velocityContext, sigAlgURI);
+        String formControlData = buildFormDataToSign(velocityContext, messageContext, sigAlgURI);
         velocityContext.put("Signature", generateSignature(signingCredential, sigAlgURI, formControlData));
 
         KeyInfoGenerator kiGenerator = SecurityHelper.getKeyInfoGenerator(signingCredential, null, null);
@@ -166,11 +165,12 @@
      * 
      * @param velocityContext the Velocity context which is already populated with the values for SAML message and relay
      *            state
+     * @param messageContext  the SAML message context being processed
      * @param sigAlgURI the signature algorithm URI
      * 
      * @return the form control data string for signature computation
      */
-    protected String buildFormDataToSign(VelocityContext velocityContext, String sigAlgURI) {
+    protected String buildFormDataToSign(VelocityContext velocityContext, SAMLMessageContext messageContext, String sigAlgURI) {
         StringBuilder builder = new StringBuilder();
 
         boolean isRequest = false;
@@ -198,8 +198,8 @@
             builder.append("SAMLResponse=" + msg);
         }
 
-        if (velocityContext.get("RelayState") != null) {
-            builder.append("&RelayState=" + HTTPTransportUtils.urlDecode((String) velocityContext.get("RelayState")));
+        if (messageContext.getRelayState() != null) {
+            builder.append("&RelayState=" + messageContext.getRelayState());
         }
 
         builder.append("&SigAlg=" + sigAlgURI);
Index: src/main/java/org/opensaml/saml2/binding/encoding/HTTPPostEncoder.java
===================================================================
--- src/main/java/org/opensaml/saml2/binding/encoding/HTTPPostEncoder.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/binding/encoding/HTTPPostEncoder.java	(revision 1528)
@@ -33,6 +33,8 @@
 import org.opensaml.ws.transport.http.HTTPTransportUtils;
 import org.opensaml.xml.util.Base64;
 import org.opensaml.xml.util.XMLHelper;
+import org.owasp.esapi.ESAPI;
+import org.owasp.esapi.Encoder;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -148,9 +150,12 @@
      */
     protected void populateVelocityContext(VelocityContext velocityContext, SAMLMessageContext messageContext,
             String endpointURL) throws MessageEncodingException {
+        
+        Encoder esapiEncoder = ESAPI.encoder();
 
-        log.debug("Encoding action url of: {}", endpointURL);
-        velocityContext.put("action", endpointURL);
+        String encodedEndpointURL = esapiEncoder.encodeForHTMLAttribute(endpointURL);
+        log.debug("Encoding action url of '{}' with encoded value '{}'", endpointURL, encodedEndpointURL);
+        velocityContext.put("action", encodedEndpointURL);
 
         log.debug("Marshalling and Base64 encoding SAML message");
         if (messageContext.getOutboundSAMLMessage().getDOM() == null) {
@@ -174,8 +179,9 @@
 
         String relayState = messageContext.getRelayState();
         if (checkRelayState(relayState)) {
-            log.debug("Encoding relay state of: {}", relayState);
-            velocityContext.put("RelayState", relayState);
+            String encodedRelayState = esapiEncoder.encodeForHTMLAttribute(relayState);
+            log.debug("Setting RelayState parameter to: '{}', encoded as '{}'", relayState, encodedRelayState);
+            velocityContext.put("RelayState", encodedRelayState);
         }
     }
 }
\ No newline at end of file
Index: src/main/java/org/opensaml/saml2/binding/encoding/HandlerChainAwareHTTPSOAP11Encoder.java
===================================================================
--- src/main/java/org/opensaml/saml2/binding/encoding/HandlerChainAwareHTTPSOAP11Encoder.java	(revision 0)
+++ src/main/java/org/opensaml/saml2/binding/encoding/HandlerChainAwareHTTPSOAP11Encoder.java	(revision 1528)
@@ -0,0 +1,260 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.saml2.binding.encoding;
+
+import java.io.IOException;
+import java.io.OutputStreamWriter;
+import java.io.UnsupportedEncodingException;
+import java.io.Writer;
+import java.util.List;
+
+import org.opensaml.common.SAMLObject;
+import org.opensaml.common.binding.SAMLMessageContext;
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.ws.message.MessageContext;
+import org.opensaml.ws.message.encoder.MessageEncodingException;
+import org.opensaml.ws.message.handler.HandlerChain;
+import org.opensaml.ws.message.handler.HandlerChainAware;
+import org.opensaml.ws.message.handler.HandlerChainResolver;
+import org.opensaml.ws.message.handler.HandlerException;
+import org.opensaml.ws.soap.common.SOAPObjectBuilder;
+import org.opensaml.ws.soap.soap11.Body;
+import org.opensaml.ws.soap.soap11.Envelope;
+import org.opensaml.ws.soap.soap11.Header;
+import org.opensaml.ws.soap.soap11.encoder.SOAP11Encoder;
+import org.opensaml.ws.transport.OutTransport;
+import org.opensaml.ws.transport.http.HTTPOutTransport;
+import org.opensaml.ws.transport.http.HTTPTransportUtils;
+import org.opensaml.ws.wsaddressing.Action;
+import org.opensaml.xml.Configuration;
+import org.opensaml.xml.XMLObject;
+import org.opensaml.xml.XMLObjectBuilderFactory;
+import org.opensaml.xml.util.XMLHelper;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.w3c.dom.Element;
+
+/**
+ * 
+ */
+public class HandlerChainAwareHTTPSOAP11Encoder extends BaseSAML2MessageEncoder implements HandlerChainAware {
+
+    /** Class logger. */
+    private final Logger log = LoggerFactory.getLogger(HandlerChainAwareHTTPSOAP11Encoder.class);
+    
+    /** SOAP Envelope builder. */
+    private SOAPObjectBuilder<Envelope> envBuilder;
+    
+    /** SOAP Body builder. */
+    private SOAPObjectBuilder<Body> bodyBuilder;
+
+    /** Overrides binding confidentiality. */
+    private boolean notConfidential = false;
+    
+    /** Constructor. */
+    public HandlerChainAwareHTTPSOAP11Encoder() {
+        super();
+        XMLObjectBuilderFactory builderFactory = Configuration.getBuilderFactory();
+        envBuilder = (SOAPObjectBuilder<Envelope>) builderFactory.getBuilder(Envelope.DEFAULT_ELEMENT_NAME);
+        bodyBuilder = (SOAPObjectBuilder<Body>) builderFactory.getBuilder(Body.DEFAULT_ELEMENT_NAME);
+    }
+    
+    /**
+     * Returns confidentiality override flag.
+     * @return true iff the encoder cannot provide confidentiality
+     */
+    public boolean isNotConfidential() {
+        return notConfidential;
+    }
+    
+    /**
+     * Sets confidentiality override flag.
+     * @param flag  override flag
+     */
+    public void setNotConfidential(boolean flag) {
+        notConfidential = flag;
+    }
+    
+    /** {@inheritDoc} */
+    public String getBindingURI() {
+        return SAMLConstants.SAML2_SOAP11_BINDING_URI;
+    }
+    
+    /** {@inheritDoc} */
+    public boolean providesMessageConfidentiality(MessageContext messageContext) throws MessageEncodingException {
+        if (notConfidential) {
+            return false;
+        }
+        return messageContext.getOutboundMessageTransport().isConfidential();
+    }
+
+    /** {@inheritDoc} */
+    public boolean providesMessageIntegrity(MessageContext messageContext) throws MessageEncodingException {
+        return messageContext.getOutboundMessageTransport().isIntegrityProtected();
+    }
+    
+    // TODO: The rest of the methods here are copied from BaseHandlerChainAwareMessageDecoder and
+    // the SOAP subclasses on that "branch", and should drop out once the SAML encoders are aligned
+    // to that base class.
+
+    /** {@inheritDoc} */
+    protected void doEncode(MessageContext messageContext) throws MessageEncodingException {
+        
+        if (!(messageContext instanceof SAMLMessageContext)) {
+            log.error("Invalid message context type, this encoder only support SAMLMessageContext");
+            throw new MessageEncodingException(
+                    "Invalid message context type, this encoder only support SAMLMessageContext");
+        }
+
+        if (!(messageContext.getOutboundMessageTransport() instanceof HTTPOutTransport)) {
+            log.error("Invalid outbound message transport type, this encoder only support HTTPOutTransport");
+            throw new MessageEncodingException(
+                    "Invalid outbound message transport type, this encoder only support HTTPOutTransport");
+        }
+
+        prepareMessageContext(messageContext);
+        
+        processOutboundHandlerChain(messageContext);
+        
+        encodeToTransport(messageContext);
+    }
+    
+    /**
+     * Perform final binding-specific processing of message context and prepare it for encoding
+     * to the transport.  
+     * 
+     * <p>
+     * This should include constructing and populating all binding-specific structure and data that needs to be
+     * reflected by the message context's properties.
+     * </p>
+     * 
+     * <p>
+     * This method is called prior to {@link #processOutboundHandlerChain(MessageContext)}.
+     * </p>
+     * 
+     * @param messageContext the message context to process
+     * @throws MessageEncodingException thrown if there is a problem preparing the message context
+     *              for encoding
+     */
+    protected void prepareMessageContext(MessageContext messageContext) throws MessageEncodingException {
+        SAMLMessageContext samlMsgCtx = (SAMLMessageContext) messageContext;
+
+        SAMLObject samlMessage = samlMsgCtx.getOutboundSAMLMessage();
+        if (samlMessage == null) {
+            throw new MessageEncodingException("No outbound SAML message contained in message context");
+        }
+
+        signMessage(samlMsgCtx);
+
+        log.debug("Building SOAP envelope");
+
+        Envelope envelope = envBuilder.buildObject();
+        Body body = bodyBuilder.buildObject();
+        envelope.setBody(body);
+        body.getUnknownXMLObjects().add(samlMessage);
+
+        messageContext.setOutboundMessage(envelope);
+    }
+    
+    /**
+     * Encode the message context to the transport.
+     * 
+     * @param messageContext the message context to process
+     *  @throws MessageEncodingException thrown if there is a problem encoding the message context
+     *              to the transport
+     */
+    protected void encodeToTransport(MessageContext messageContext) throws MessageEncodingException {
+        Element envelopeElem = marshallMessage(messageContext.getOutboundMessage());
+        
+        preprocessTransport(messageContext);
+        
+        try {
+            OutTransport outTransport = messageContext.getOutboundMessageTransport();
+            Writer out = new OutputStreamWriter(outTransport.getOutgoingStream(), "UTF-8");
+            XMLHelper.writeNode(envelopeElem, out);
+            out.flush();
+        } catch (UnsupportedEncodingException e) {
+            log.error("JVM does not support required UTF-8 encoding");
+            throw new MessageEncodingException("JVM does not support required UTF-8 encoding");
+        } catch (IOException e) {
+            log.error("Unable to write message content to outbound stream", e);
+            throw new MessageEncodingException("Unable to write message content to outbound stream", e);
+        }
+    }
+
+    /**
+     * <p>
+     * This implementation performs the following actions on the context's {@link HTTPOutTransport}:
+     * <ol>
+     *   <li>Adds the HTTP header: "Cache-control: no-cache, no-store"</li>
+     *   <li>Adds the HTTP header: "Pragma: no-cache"</li>
+     *   <li>Sets the character encoding to: "UTF-8"</li>
+     *   <li>Sets the content type to: "text/xml"</li>
+     *   <li>Sets the SOAPAction HTTP header</li>
+     * </ol>
+     * </p>
+     * 
+     * @param messageContext the current message context being processed
+     * 
+     * @throws MessageEncodingException thrown if there is a problem preprocessing the transport
+     */
+    protected void preprocessTransport(MessageContext messageContext) throws MessageEncodingException {
+        HTTPOutTransport outTransport = (HTTPOutTransport) messageContext.getOutboundMessageTransport();
+        HTTPTransportUtils.addNoCacheHeaders(outTransport);
+        HTTPTransportUtils.setUTF8Encoding(outTransport);
+        HTTPTransportUtils.setContentType(outTransport, "text/xml");
+        outTransport.setHeader("SOAPAction", "http://www.oasis-open.org/committees/security");
+    }
+ 
+    /**
+     * Process the outbound {@link HandlerChain} for the message context, if any.
+     * 
+     * @param messageContext the message context to process
+     * @throws MessageEncodingException thrown if a handler indicates a problem handling the message
+     */
+    protected void processOutboundHandlerChain(MessageContext messageContext) throws MessageEncodingException {
+        HandlerChainResolver outboundHandlerChainResolver = messageContext.getOutboundHandlerChainResolver();
+        if (outboundHandlerChainResolver != null) {
+            log.debug("Invoking outbound handler chain on message context");
+            try {
+                for (HandlerChain outboundHandlerChain : outboundHandlerChainResolver.resolve(messageContext)) {
+                    if (outboundHandlerChain != null) {
+                        invokeHandlerChain(outboundHandlerChain, messageContext);
+                    }
+                }
+            } catch (HandlerException e) {
+                log.error("Encountered HandlerException when encoding message: {}", e.getMessage());
+                throw new MessageEncodingException("Handler exception while encoding message", e);
+            }
+        }
+    }
+    
+    /**
+     * Invoke a handler chain on the specified message context.
+     * 
+     * @param handlerChain the handle chain to invoke
+     * @param messageContext the message context to process
+     * 
+     * @throws HandlerException if handler chain encountered a problem handling the message context
+     */
+    protected void invokeHandlerChain(HandlerChain handlerChain, MessageContext messageContext)
+            throws HandlerException {
+        if (handlerChain != null && messageContext != null) {
+            handlerChain.invoke(messageContext);
+        }
+    }
+}

Property changes on: src/main/java/org/opensaml/saml2/binding/encoding/HandlerChainAwareHTTPSOAP11Encoder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/saml2/binding/encoding/HTTPArtifactEncoder.java
===================================================================
--- src/main/java/org/opensaml/saml2/binding/encoding/HTTPArtifactEncoder.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/binding/encoding/HTTPArtifactEncoder.java	(revision 1528)
@@ -33,9 +33,10 @@
 import org.opensaml.ws.message.MessageContext;
 import org.opensaml.ws.message.encoder.MessageEncodingException;
 import org.opensaml.ws.transport.http.HTTPOutTransport;
-import org.opensaml.ws.transport.http.HTTPTransportUtils;
 import org.opensaml.xml.io.MarshallingException;
 import org.opensaml.xml.util.Pair;
+import org.owasp.esapi.ESAPI;
+import org.owasp.esapi.Encoder;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -150,11 +151,17 @@
 
         log.debug("Creating velocity context");
         VelocityContext context = new VelocityContext();
-        context.put("action", getEndpointURL(artifactContext));
+        Encoder esapiEncoder = ESAPI.encoder();
+        String endpointURL = getEndpointURL(artifactContext).toString();
+        String encodedEndpointURL = esapiEncoder.encodeForHTMLAttribute(endpointURL);
+        log.debug("Setting action parameter to: '{}', encoded as '{}'", endpointURL, encodedEndpointURL);
+        context.put("action", encodedEndpointURL);
         context.put("SAMLArt", buildArtifact(artifactContext).base64Encode());
 
         if (checkRelayState(artifactContext.getRelayState())) {
-            context.put("RelayState", HTTPTransportUtils.urlEncode(artifactContext.getRelayState()));
+            String encodedRelayState = esapiEncoder.encodeForHTMLAttribute(artifactContext.getRelayState());
+            log.debug("Setting RelayState parameter to: '{}', encoded as '{}'", artifactContext.getRelayState(), encodedRelayState);
+            context.put("RelayState", encodedRelayState);
         }
 
         try {
Index: src/main/java/org/opensaml/saml2/binding/decoding/HTTPSOAP11Decoder.java
===================================================================
--- src/main/java/org/opensaml/saml2/binding/decoding/HTTPSOAP11Decoder.java	(revision 1501)
+++ src/main/java/org/opensaml/saml2/binding/decoding/HTTPSOAP11Decoder.java	(revision 1528)
@@ -169,9 +169,9 @@
                 attribExtensObject = (AttributeExtensibleXMLObject) header;
                 if (DatatypeHelper.safeEquals("1", attribExtensObject.getUnknownAttributes().get(soapMustUnderstand))) {
                     if (!understoodHeaders.contains(header.getElementQName())) {
-                        throw new MessageDecodingException("SOAP decoder encountered a  header, "
+                        throw new MessageDecodingException("SOAP decoder encountered a header, "
                                 + header.getElementQName()
-                                + ", that requires undestanding however this decoder does not understand that header");
+                                + ", that requires understanding however this decoder does not understand that header");
                     }
                 }
             }
Index: src/main/java/org/opensaml/saml2/binding/decoding/HandlerChainAwareHTTPSOAP11Decoder.java
===================================================================
--- src/main/java/org/opensaml/saml2/binding/decoding/HandlerChainAwareHTTPSOAP11Decoder.java	(revision 0)
+++ src/main/java/org/opensaml/saml2/binding/decoding/HandlerChainAwareHTTPSOAP11Decoder.java	(revision 1528)
@@ -0,0 +1,144 @@
+/*
+ * Copyright 2011 University Corporation for Advanced Internet Development, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.opensaml.saml2.binding.decoding;
+
+import org.opensaml.common.xml.SAMLConstants;
+import org.opensaml.common.binding.SAMLMessageContext;
+import org.opensaml.ws.message.MessageContext;
+import org.opensaml.ws.message.decoder.MessageDecodingException;
+import org.opensaml.ws.message.handler.HandlerChain;
+import org.opensaml.ws.message.handler.HandlerChainAware;
+import org.opensaml.ws.message.handler.HandlerChainResolver;
+import org.opensaml.ws.message.handler.HandlerException;
+import org.opensaml.xml.parse.ParserPool;
+import org.opensaml.xml.security.SecurityException;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * SAML 2.0 SOAP 1.1 over HTTP binding decoder with support for handler chains.
+ */
+public class HandlerChainAwareHTTPSOAP11Decoder extends HTTPSOAP11Decoder implements HandlerChainAware {
+
+    /** Class logger. */
+    private final Logger log = LoggerFactory.getLogger(HandlerChainAwareHTTPSOAP11Decoder.class);
+
+    /** Constructor.  */
+    public HandlerChainAwareHTTPSOAP11Decoder() {
+        super();
+    }
+
+    /**
+     * Constructor.
+     *
+     * @param pool parser pool to use
+     */
+    public HandlerChainAwareHTTPSOAP11Decoder(ParserPool pool) {
+        super(pool);
+    }
+
+    // TODO: The rest of the methods here are copied from BaseHandlerChainAwareMessageDecoder and
+    // should drop out once the SAML decoders are aligned to that base class.
+    
+    /** {@inheritDoc} */
+    public void decode(MessageContext messageContext) throws MessageDecodingException, SecurityException {
+        log.debug("Beginning to decode message from inbound transport of type: {}", messageContext
+                .getInboundMessageTransport().getClass().getName());
+        
+        doDecode(messageContext);
+        
+        logDecodedMessage(messageContext);
+
+        processPreSecurityInboundHandlerChain(messageContext);
+        log.debug("Successfully processed pre-SecurityPolicy inbound handler chain.");
+        
+        processSecurityPolicy(messageContext);
+
+        processPostSecurityInboundHandlerChain(messageContext);
+        log.debug("Successfully processed post-SecurityPolicy inbound handler chain.");
+        
+        log.debug("Successfully decoded message.");
+
+        // TODO: This gets executed by BaseSAML2MessageDecoder. Probably needs to be
+        // factored out somehow to avoid brittleness in the decode() override.
+        checkEndpointURI((SAMLMessageContext) messageContext);
+    }
+
+    /**
+     * Process the pre-SecurityPolicy inbound {@link HandlerChain} for the message context, if any.
+     * 
+     * @param messageContext the message context to process
+     * @throws MessageDecodingException thrown if a handler indicates a problem handling the message
+     */
+    protected void processPreSecurityInboundHandlerChain(MessageContext messageContext)
+            throws MessageDecodingException {
+        HandlerChainResolver inboundHandlerChainResolver = messageContext.getPreSecurityInboundHandlerChainResolver();
+        if (inboundHandlerChainResolver != null) {
+            log.debug("Invoking pre-SecurityPolicy inbound handler chain on message context");
+            try {
+                for (HandlerChain inboundHandlerChain : inboundHandlerChainResolver.resolve(messageContext)) {
+                    if (inboundHandlerChain != null) {
+                        invokeHandlerChain(inboundHandlerChain, messageContext);
+                    }
+                }
+            } catch (HandlerException e) {
+                log.error("Encountered pre-SecurityPolicy HandlerException when decoding message: {}", e.getMessage());
+                throw new MessageDecodingException("Pre-SecurityPolicy Handler exception while decoding message", e);
+            }
+        }
+    }
+    
+    /**
+     * Process the post-SecurityPolicy inbound {@link HandlerChain} for the message context, if any.
+     * 
+     * @param messageContext the message context to process
+     * @throws MessageDecodingException thrown if a handler indicates a problem handling the message
+     */
+    protected void processPostSecurityInboundHandlerChain(MessageContext messageContext)
+            throws MessageDecodingException {
+        HandlerChainResolver inboundHandlerChainResolver = messageContext.getPostSecurityInboundHandlerChainResolver();
+        if (inboundHandlerChainResolver != null) {
+            log.debug("Invoking post-SecurityPolicy inbound handler chain on message context");
+            try {
+                for (HandlerChain inboundHandlerChain : inboundHandlerChainResolver.resolve(messageContext)) {
+                    if (inboundHandlerChain != null) {
+                        invokeHandlerChain(inboundHandlerChain, messageContext);
+                    }
+                }
+            } catch (HandlerException e) {
+                log.error("Encountered post-SecurityPolicy HandlerException when decoding message: {}", e.getMessage());
+                throw new MessageDecodingException("Handler exception while decoding message", e);
+            }
+        }
+    }
+    
+    /**
+     * Invoke a handler chain on the specified message context.
+     * 
+     * @param handlerChain the handle chain to invoke
+     * @param messageContext the message context to process
+     * 
+     * @throws HandlerException if handler chain encountered a problem handling the message context
+     */
+    protected void invokeHandlerChain(HandlerChain handlerChain, MessageContext messageContext)
+            throws HandlerException {
+        if (handlerChain != null && messageContext != null) {
+            handlerChain.invoke(messageContext);
+        }
+    }
+
+}

Property changes on: src/main/java/org/opensaml/saml2/binding/decoding/HandlerChainAwareHTTPSOAP11Decoder.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/java/org/opensaml/saml2/binding/package.html
===================================================================
--- src/main/java/org/opensaml/saml2/binding/package.html	(revision 1501)
+++ src/main/java/org/opensaml/saml2/binding/package.html	(revision 1528)
@@ -3,10 +3,10 @@
 Class for working with SAML 2 bindings.
 <p />
 Information on using this library can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoUserManual">User's Manual</a> and information 
 on extending its functionality can be found in the 
-<a href="https://spaces.internet2.edu/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
+<a href="https://wiki.shibboleth.net/confluence/display/SHIB/OSTwoDeveloperManual">Developer's Manual</a>.
 
-@see <a href="https://spaces.internet2.edu/display/SHIB/OpenSAML">OpenSAML Wiki</a>
+@see <a href="https://wiki.shibboleth.net/confluence/display/SHIB/OpenSAML">OpenSAML Wiki</a>
 </BODY>
 </HTML>
\ No newline at end of file
Index: src/main/resources/schema/sstc-metadata-attr.xsd
===================================================================
--- src/main/resources/schema/sstc-metadata-attr.xsd	(revision 0)
+++ src/main/resources/schema/sstc-metadata-attr.xsd	(revision 1528)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<schema targetNamespace="urn:oasis:names:tc:SAML:metadata:attribute" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" elementFormDefault="unqualified" attributeFormDefault="unqualified" blockDefault="substitution" version="2.0">
+
+  <annotation>
+    <documentation>
+      Document title: SAML V2.0 Metadata Extention for Entity Attributes Schema
+      Document identifier: sstc-metadata-attr.xsd
+      Location: http://www.oasis-open.org/committees/documents.php?wg_abbrev=security
+      Revision history:
+      V1.0 (November 2008):
+        Initial version.
+    </documentation>
+  </annotation>
+
+  <import namespace="urn:oasis:names:tc:SAML:2.0:assertion" schemaLocation="saml-schema-assertion-2.0.xsd"/>
+
+  <element name="EntityAttributes" type="mdattr:EntityAttributesType"/>
+  <complexType name="EntityAttributesType">
+    <choice maxOccurs="unbounded">
+      <element ref="saml:Attribute"/>
+      <element ref="saml:Assertion"/>
+    </choice>
+  </complexType>
+
+</schema>
\ No newline at end of file

Property changes on: src/main/resources/schema/sstc-metadata-attr.xsd
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/resources/schema/sstc-saml-metadata-ui-v1.0.xsd
===================================================================
--- src/main/resources/schema/sstc-saml-metadata-ui-v1.0.xsd	(revision 0)
+++ src/main/resources/schema/sstc-saml-metadata-ui-v1.0.xsd	(revision 1528)
@@ -0,0 +1,87 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<schema 
+  targetNamespace="urn:oasis:names:tc:SAML:metadata:ui"
+  xmlns="http://www.w3.org/2001/XMLSchema"
+  xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
+  xmlns:mdui="urn:oasis:names:tc:SAML:metadata:ui"
+  elementFormDefault="unqualified"
+  attributeFormDefault="unqualified"
+  blockDefault="substitution"
+  version="1.0">
+
+  <annotation>
+    <documentation>
+      Document title: Metadata Extension Schema for SAML V2.0 Metadata Extensions for Login and Discovery User Interface Version 1.0
+      Document identifier: sstc-saml-metadata-ui-v1.0.xsd
+      Location: http://docs.oasis-open.org/security/saml/Post2.0/
+      Revision history:
+      01 November 2010
+        Changed filename.
+      September 2010:
+        Initial version.
+    </documentation>
+  </annotation>
+
+  <import namespace="urn:oasis:names:tc:SAML:2.0:metadata"
+    schemaLocation="saml-schema-metadata-2.0.xsd"/>
+  <import namespace="http://www.w3.org/XML/1998/namespace"
+    schemaLocation="http://www.w3.org/2001/xml.xsd"/>
+
+  <element name="UIInfo" type="mdui:UIInfoType" />
+  <complexType name="UIInfoType">
+    <choice minOccurs="0" maxOccurs="unbounded">
+      <element ref="mdui:DisplayName"/>
+      <element ref="mdui:Description"/>
+      <element ref="mdui:Keywords"/>
+      <element ref="mdui:Logo"/>
+      <element ref="mdui:InformationURL"/>
+      <element ref="mdui:PrivacyStatementURL"/>
+      <any namespace="##other" processContents="lax"/>
+    </choice>
+  </complexType>
+
+  <element name="DisplayName" type="md:localizedNameType"/>
+  <element name="Description" type="md:localizedNameType"/>
+  <element name="InformationURL" type="md:localizedURIType"/>
+  <element name="PrivacyStatementURL" type="md:localizedURIType"/>
+
+  <element name="Keywords" type="mdui:KeywordsType"/>
+  <complexType name="KeywordsType">
+    <simpleContent>
+      <extension base="mdui:listOfStrings">
+        <attribute ref="xml:lang" use="required"/>
+      </extension>
+    </simpleContent>
+  </complexType>
+  
+  <simpleType name="listOfStrings">
+    <list itemType="string"/>
+  </simpleType>
+
+  <element name="Logo" type="mdui:LogoType"/>
+  <complexType name="LogoType">
+    <simpleContent>
+      <extension base="anyURI">
+        <attribute name="height" type="positiveInteger" use="required"/>
+        <attribute name="width" type="positiveInteger" use="required"/>
+        <attribute ref="xml:lang"/>
+      </extension>
+    </simpleContent>
+  </complexType>
+
+  <element name="DiscoHints" type="mdui:DiscoHintsType"/>
+  <complexType name="DiscoHintsType">
+    <choice minOccurs="0" maxOccurs="unbounded">
+      <element ref="mdui:IPHint"/>
+      <element ref="mdui:DomainHint"/>
+      <element ref="mdui:GeolocationHint"/>
+      <any namespace="##other" processContents="lax"/>
+    </choice>
+  </complexType>
+
+  <element name="IPHint" type="string"/>
+  <element name="DomainHint" type="string"/>	
+  <element name="GeolocationHint" type="anyURI"/>
+
+</schema>
+

Property changes on: src/main/resources/schema/sstc-saml-metadata-ui-v1.0.xsd
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/resources/saml2-metadata-attr-config.xml
===================================================================
--- src/main/resources/saml2-metadata-attr-config.xml	(revision 0)
+++ src/main/resources/saml2-metadata-attr-config.xml	(revision 1528)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<XMLTooling xmlns="http://www.opensaml.org/xmltooling-config" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute"
+            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
+            xsi:schemaLocation="http://www.opensaml.org/xmltooling-config ../../src/schema/xmltooling-config.xsd">
+
+    <!-- SAML V2.0 Metadata Extension for Entity Attributes Object providers -->
+    <ObjectProviders>
+
+        <!-- Description provider -->
+        <ObjectProvider qualifiedName="mdattr:EntityAttributes">
+            <BuilderClass className="org.opensaml.samlext.saml2mdattr.impl.EntityAttributesBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdattr.impl.EntityAttributesMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdattr.impl.EntityAttributesUnmarshaller" />
+        </ObjectProvider>
+
+    </ObjectProviders>
+</XMLTooling>
\ No newline at end of file

Property changes on: src/main/resources/saml2-metadata-attr-config.xml
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: src/main/resources/saml2-metadata-ui-config.xml
===================================================================
--- src/main/resources/saml2-metadata-ui-config.xml	(revision 0)
+++ src/main/resources/saml2-metadata-ui-config.xml	(revision 1528)
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<XMLTooling xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://www.opensaml.org/xmltooling-config ../../src/schema/xmltooling-config.xsd"
+	xmlns:mdui="urn:oasis:names:tc:SAML:metadata:ui"
+	xmlns="http://www.opensaml.org/xmltooling-config">
+
+	<!-- SAML 2.0 Protocol IdP Discovery Protocol Object providers -->
+	<ObjectProviders>
+
+		<!-- Description provider -->
+		<ObjectProvider qualifiedName="mdui:Description">
+			<BuilderClass className="org.opensaml.samlext.saml2mdui.impl.DescriptionBuilder" />
+			<MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.DescriptionMarshaller" />
+			<UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.DescriptionUnmarshaller" />
+		</ObjectProvider>
+        
+        <!-- DiscoHints provider -->
+        <ObjectProvider qualifiedName="mdui:DiscoHints">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.DiscoHintsBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.DiscoHintsMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.DiscoHintsUnmarshaller" />
+        </ObjectProvider>
+        
+        <!-- Keywords provider -->
+        <ObjectProvider qualifiedName="mdui:Keywords">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.KeywordsBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.KeywordsMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.KeywordsUnmarshaller" />
+        </ObjectProvider>
+
+        <!-- DisplayName provider -->
+        <ObjectProvider qualifiedName="mdui:DisplayName">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.DisplayNameBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.DisplayNameMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.DisplayNameUnmarshaller" />
+        </ObjectProvider>
+        
+        <!-- DomainHint provider -->
+        <ObjectProvider qualifiedName="mdui:DomainHint">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.DomainHintBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.DomainHintMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.DomainHintUnmarshaller" />
+        </ObjectProvider>
+        
+        <!-- GeolocationHint provider -->
+        <ObjectProvider qualifiedName="mdui:GeolocationHint">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.GeolocationHintBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.GeolocationHintMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.GeolocationHintUnmarshaller" />
+        </ObjectProvider>
+        
+        <!-- InformationURL provider -->
+        <ObjectProvider qualifiedName="mdui:InformationURL">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.InformationURLBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.InformationURLMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.InformationURLUnmarshaller" />
+        </ObjectProvider>
+        
+        <!-- IPHint provider -->
+        <ObjectProvider qualifiedName="mdui:IPHint">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.IPHintBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.IPHintMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.IPHintUnmarshaller" />
+        </ObjectProvider>
+            
+        <!-- Logo provider -->
+        <ObjectProvider qualifiedName="mdui:Logo">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.LogoBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.LogoMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.LogoUnmarshaller" />
+        </ObjectProvider>
+        
+        <!-- PrivacyStatementURL provider -->
+        <ObjectProvider qualifiedName="mdui:PrivacyStatementURL">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.PrivacyStatementURLBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.PrivacyStatementURLMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.PrivacyStatementURLUnmarshaller" />
+        </ObjectProvider>
+        
+        <!-- UIInfo provider -->
+        <ObjectProvider qualifiedName="mdui:UIInfo">
+            <BuilderClass className="org.opensaml.samlext.saml2mdui.impl.UIInfoBuilder" />
+            <MarshallingClass className="org.opensaml.samlext.saml2mdui.impl.UIInfoMarshaller" />
+            <UnmarshallingClass className="org.opensaml.samlext.saml2mdui.impl.UIInfoUnmarshaller" />
+        </ObjectProvider>
+
+	</ObjectProviders>
+</XMLTooling>
\ No newline at end of file

Property changes on: src/main/resources/saml2-metadata-ui-config.xml
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Index: pom.xml
===================================================================
--- pom.xml	(revision 1501)
+++ pom.xml	(revision 1528)
@@ -4,7 +4,7 @@
     <modelVersion>4.0.0</modelVersion>
     <groupId>org.opensaml</groupId>
     <artifactId>opensaml</artifactId>
-    <version>2.4.1</version>
+    <version>2.5.0</version>
     <packaging>jar</packaging>
 
     <name>OpenSAML-J</name>
@@ -21,29 +21,27 @@
     
     <repositories>
         <repository>
-            <id>shibboleth-release</id>
-            <name>Internet2 Releases</name>
-            <layout>default</layout>
-            <url>http://shibboleth.internet2.edu/downloads/maven2</url>
+            <id>shib-release</id>
+            <url>https://shibboleth.net/nexus/content/groups/public</url>
             <snapshots>
                 <enabled>false</enabled>
             </snapshots>
         </repository>
-    </repositories>
-    
-    <distributionManagement>
         <repository>
-            <id>release-repo</id>
-            <url>${dist.release.url}</url>
+            <id>shib-snapshot</id>
+            <url>https://shibboleth.net/nexus/content/repositories/snapshots</url>
+            <releases>
+                <enabled>false</enabled>
+            </releases>
         </repository>
-    </distributionManagement>
+    </repositories>
 
     <dependencies>
         <!-- Compile dependencies -->
         <dependency>
             <groupId>org.opensaml</groupId>
             <artifactId>openws</artifactId>
-            <version>1.4.1</version>
+            <version>1.4.2</version>
         </dependency>
         <dependency>
             <groupId>commons-collections</groupId>
@@ -66,6 +64,49 @@
                 </exclusion>
             </exclusions>
         </dependency>
+        <dependency>
+            <groupId>org.owasp.esapi</groupId>
+            <artifactId>esapi</artifactId>
+            <version>2.0GA</version>
+            <exclusions>
+                <exclusion>
+                    <groupId>commons-configuration</groupId>
+                    <artifactId>commons-configuration</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>commons-beanutils</groupId>
+                    <artifactId>commons-beanutils-core</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>commons-fileupload</groupId>
+                    <artifactId>commons-fileupload</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>commons-io</groupId>
+                    <artifactId>commons-io</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>commons-collections</groupId>
+                    <artifactId>commons-collections</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>log4j</groupId>
+                    <artifactId>log4j</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>xom</groupId>
+                    <artifactId>xom</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>org.beanshell</groupId>
+                    <artifactId>bsh-core</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>org.owasp.antisamy</groupId>
+                    <artifactId>antisamy</artifactId>
+                </exclusion>
+            </exclusions>
+    </dependency>
 
         <!-- Provided dependencies -->
         <dependency>
@@ -113,19 +154,13 @@
             <scope>runtime</scope>
         </dependency>
         <dependency>
-            <groupId>${xerces.groupId}</groupId>
-            <artifactId>resolver</artifactId>
-            <version>${xerces.version}</version>
+            <groupId>xml-resolver</groupId>
+            <artifactId>xml-resolver</artifactId>
+            <version>1.2</version>
             <scope>runtime</scope>
         </dependency>
         <dependency>
-            <groupId>${xerces.groupId}</groupId>
-            <artifactId>serializer</artifactId>
-            <version>${xerces.version}</version>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.xalan</groupId>
+            <groupId>xalan</groupId>
             <artifactId>xalan</artifactId>
             <version>2.7.1</version>
             <scope>runtime</scope>
@@ -151,19 +186,24 @@
             <scope>test</scope>
         </dependency>
     </dependencies>
+    
+    <distributionManagement>
+        <repository>
+            <id>release</id>
+            <url>https://shibboleth.net/nexus/content/repositories/releases</url>
+        </repository>
+        <snapshotRepository>
+            <id>snapshot</id>
+            <url>https://shibboleth.net/nexus/content/repositories/snapshots</url>
+        </snapshotRepository>
+    </distributionManagement>
 
     <build>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-resources-plugin</artifactId>
-                <configuration>
-                    <encoding>UTF-8</encoding>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-compiler-plugin</artifactId>
+                <version>2.3.2</version>
                 <configuration>
                     <source>1.5</source>
                     <target>1.5</target>
@@ -173,6 +213,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-assembly-plugin</artifactId>
+                <version>2.2.1</version>
                 <configuration>
                     <descriptors>
                         <descriptor>src/main/assembly/bin.xml</descriptor>
@@ -193,6 +234,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.8</version>
                 <configuration>
                   <argLine>-Xmx256m</argLine>
                 </configuration>
@@ -200,6 +242,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-jar-plugin</artifactId>
+                <version>2.3.1</version>
                 <configuration>
                     <archive>
                         <index>true</index>
@@ -210,8 +253,8 @@
                             <manifestSection>
                                 <name>org/opensaml/</name>
                                 <manifestEntries>
-                                    <Implementation-Title>${pom.artifactId}</Implementation-Title>
-                                    <Implementation-Version>${pom.version}</Implementation-Version>
+                                    <Implementation-Title>${project.artifactId}</Implementation-Title>
+                                    <Implementation-Version>${project.version}</Implementation-Version>
                                     <Implementation-Vendor>www.opensaml.org</Implementation-Vendor>
                                 </manifestEntries>
                             </manifestSection>
@@ -251,6 +294,34 @@
                     </archive>
                 </configuration>                
             </plugin>
+            <plugin>
+                <artifactId>maven-source-plugin</artifactId>
+                <version>2.1.2</version>
+                <executions>
+                    <execution>
+                        <id>attach-sources</id>
+                        <goals>
+                            <goal>jar</goal>
+                        </goals>
+                    </execution>
+                </executions>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-javadoc-plugin</artifactId>
+                <version>2.7</version>
+                <executions>
+                    <execution>
+                        <id>attach-javadocs</id>
+                        <goals>
+                            <goal>jar</goal>
+                        </goals>
+                    </execution>
+                </executions>
+                <configuration>
+                    <quiet>true</quiet>
+                </configuration>
+            </plugin>
         </plugins>
     </build>
 
@@ -259,6 +330,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-javadoc-plugin</artifactId>
+                <version>2.7</version>
                 <configuration>
                     <links>
                         <link>http://java.sun.com/j2se/1.5.0/docs/api/</link>
@@ -274,6 +346,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-jxr-plugin</artifactId>
+                <version>2.2</version>
                 <configuration>
                     <outputDirectory>${project.reporting.outputDirectory}/xref</outputDirectory>
                     <doctitle>${project.name} ${project.version} Code Cross-Reference</doctitle>
@@ -284,6 +357,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-surefire-report-plugin</artifactId>
+                <version>2.8</version>
                 <configuration>
                     <outputDirectory>${project.reporting.outputDirectory}/unitTest</outputDirectory>
                     <xrefLocation>${project.reporting.outputDirectory}/xref</xrefLocation>
@@ -298,9 +372,6 @@
             <build>
                 <plugins>
                     <plugin>
-                        <artifactId>maven-compiler-plugin</artifactId>
-                    </plugin>
-                    <plugin>
                         <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-javadoc-plugin</artifactId>
                         <executions>
@@ -395,13 +466,10 @@
     <mailingLists>
         <mailingList>
             <name>OpenSAML Users</name>
-            <subscribe>https://spaces.internet2.edu/display/OpenSAML/MailingList</subscribe>
-            <unsubscribe>https://spaces.internet2.edu/display/OpenSAML/MailingList</unsubscribe>
+            <subscribe>https://wiki.shibboleth.net/confluence/display/OpenSAML/MailingList</subscribe>
+            <unsubscribe>https://wiki.shibboleth.net/confluence/display/OpenSAML/MailingList</unsubscribe>
             <post>mace-opensaml-users@internet2.edu</post>
-            <archive>https://mail.internet2.edu/wws/arc/mace-opensaml-users</archive>
-            <otherArchives>
-                <otherArchive>http://groups.google.com/group/opensaml-users</otherArchive>
-            </otherArchives>
+            <archive>http://groups.google.com/group/opensaml-users</archive>
         </mailingList>
     </mailingLists>
     
@@ -436,13 +504,13 @@
         <developer>
             <id>lajoie</id>
             <name>Chad La Joie</name>
-            <organization>SWITCH</organization>
-            <organizationUrl>http://www.switch.ch/</organizationUrl>
+            <organization>Itumi, LLC</organization>
+            <organizationUrl>http://itumi.biz</organizationUrl>
             <roles>
                 <role>developer</role>
                 <role>documentation</role>
             </roles>
-            <timezone>+1</timezone>
+            <timezone>-5</timezone>
         </developer>
         <developer>
             <id>putmanb</id>
@@ -466,4 +534,4 @@
         </developer>
     </developers>
     
-</project>
\ No newline at end of file
+</project>
